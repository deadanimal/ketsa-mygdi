/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
/**
 * For date range picker there are `BsDaterangepickerConfig` which inherits all properties,
 * except `displayMonths`, for range picker it default to `2`
 */
import * as ɵngcc0 from '@angular/core';
var BsDatepickerConfig = /** @class */ (function () {
    function BsDatepickerConfig() {
        /**
         * sets use adaptive position
         */
        this.adaptivePosition = false;
        /**
         * sets use UTC date time format
         */
        this.useUtc = false;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
        /**
         * CSS class which will be applied to datepicker container,
         * usually used to set color theme
         */
        this.containerClass = 'theme-green';
        // DatepickerRenderOptions
        this.displayMonths = 1;
        /**
         * Allows to hide week numbers in datepicker
         */
        this.showWeekNumbers = true;
        this.dateInputFormat = 'L';
        // range picker
        this.rangeSeparator = ' - ';
        /**
         * Date format for date range input field
         */
        this.rangeInputFormat = 'L';
        // DatepickerFormatOptions
        this.monthTitle = 'MMMM';
        this.yearTitle = 'YYYY';
        this.dayLabel = 'D';
        this.monthLabel = 'MMMM';
        this.yearLabel = 'YYYY';
        this.weekNumbers = 'w';
    }
BsDatepickerConfig.ɵfac = function BsDatepickerConfig_Factory(t) { return new (t || BsDatepickerConfig)(); };
BsDatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsDatepickerConfig, factory: function (t) { return BsDatepickerConfig.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsDatepickerConfig, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return BsDatepickerConfig;
}());
export { BsDatepickerConfig };
if (false) {
    /**
     * sets use adaptive position
     * @type {?}
     */
    BsDatepickerConfig.prototype.adaptivePosition;
    /**
     * sets use UTC date time format
     * @type {?}
     */
    BsDatepickerConfig.prototype.useUtc;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDatepickerConfig.prototype.isAnimated;
    /** @type {?} */
    BsDatepickerConfig.prototype.value;
    /** @type {?} */
    BsDatepickerConfig.prototype.isDisabled;
    /**
     * Default min date for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.minDate;
    /**
     * Default max date for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.maxDate;
    /**
     * Default date custom classes for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.dateCustomClasses;
    /** @type {?} */
    BsDatepickerConfig.prototype.daysDisabled;
    /**
     * Disable specific dates
     * @type {?}
     */
    BsDatepickerConfig.prototype.datesDisabled;
    /**
     * Makes dates from other months active
     * @type {?}
     */
    BsDatepickerConfig.prototype.selectFromOtherMonth;
    /**
     * Makes dates from other months active
     * @type {?}
     */
    BsDatepickerConfig.prototype.selectWeek;
    /**
     * Add class to current day
     * @type {?}
     */
    BsDatepickerConfig.prototype.customTodayClass;
    /**
     * Default mode for all date pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.minMode;
    /**
     * CSS class which will be applied to datepicker container,
     * usually used to set color theme
     * @type {?}
     */
    BsDatepickerConfig.prototype.containerClass;
    /** @type {?} */
    BsDatepickerConfig.prototype.displayMonths;
    /**
     * Allows to hide week numbers in datepicker
     * @type {?}
     */
    BsDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    BsDatepickerConfig.prototype.dateInputFormat;
    /** @type {?} */
    BsDatepickerConfig.prototype.rangeSeparator;
    /**
     * Date format for date range input field
     * @type {?}
     */
    BsDatepickerConfig.prototype.rangeInputFormat;
    /** @type {?} */
    BsDatepickerConfig.prototype.monthTitle;
    /** @type {?} */
    BsDatepickerConfig.prototype.yearTitle;
    /** @type {?} */
    BsDatepickerConfig.prototype.dayLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.monthLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.yearLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.weekNumbers;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9uZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXIvZXNtNS9icy1kYXRlcGlja2VyLmNvbmZpZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0F1Q0s7Ozs7O2dEQUdDIiwiZmlsZSI6ImJzLWRhdGVwaWNrZXIuY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogRm9yIGRhdGUgcmFuZ2UgcGlja2VyIHRoZXJlIGFyZSBgQnNEYXRlcmFuZ2VwaWNrZXJDb25maWdgIHdoaWNoIGluaGVyaXRzIGFsbCBwcm9wZXJ0aWVzLFxuICogZXhjZXB0IGBkaXNwbGF5TW9udGhzYCwgZm9yIHJhbmdlIHBpY2tlciBpdCBkZWZhdWx0IHRvIGAyYFxuICovXG52YXIgQnNEYXRlcGlja2VyQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJzRGF0ZXBpY2tlckNvbmZpZygpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHNldHMgdXNlIGFkYXB0aXZlIHBvc2l0aW9uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFkYXB0aXZlUG9zaXRpb24gPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHNldHMgdXNlIFVUQyBkYXRlIHRpbWUgZm9ybWF0XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnVzZVV0YyA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogdHVybiBvbi9vZmYgYW5pbWF0aW9uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmlzQW5pbWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENTUyBjbGFzcyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gZGF0ZXBpY2tlciBjb250YWluZXIsXG4gICAgICAgICAqIHVzdWFsbHkgdXNlZCB0byBzZXQgY29sb3IgdGhlbWVcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29udGFpbmVyQ2xhc3MgPSAndGhlbWUtZ3JlZW4nO1xuICAgICAgICAvLyBEYXRlcGlja2VyUmVuZGVyT3B0aW9uc1xuICAgICAgICB0aGlzLmRpc3BsYXlNb250aHMgPSAxO1xuICAgICAgICAvKipcbiAgICAgICAgICogQWxsb3dzIHRvIGhpZGUgd2VlayBudW1iZXJzIGluIGRhdGVwaWNrZXJcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2hvd1dlZWtOdW1iZXJzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kYXRlSW5wdXRGb3JtYXQgPSAnTCc7XG4gICAgICAgIC8vIHJhbmdlIHBpY2tlclxuICAgICAgICB0aGlzLnJhbmdlU2VwYXJhdG9yID0gJyAtICc7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEYXRlIGZvcm1hdCBmb3IgZGF0ZSByYW5nZSBpbnB1dCBmaWVsZFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yYW5nZUlucHV0Rm9ybWF0ID0gJ0wnO1xuICAgICAgICAvLyBEYXRlcGlja2VyRm9ybWF0T3B0aW9uc1xuICAgICAgICB0aGlzLm1vbnRoVGl0bGUgPSAnTU1NTSc7XG4gICAgICAgIHRoaXMueWVhclRpdGxlID0gJ1lZWVknO1xuICAgICAgICB0aGlzLmRheUxhYmVsID0gJ0QnO1xuICAgICAgICB0aGlzLm1vbnRoTGFiZWwgPSAnTU1NTSc7XG4gICAgICAgIHRoaXMueWVhckxhYmVsID0gJ1lZWVknO1xuICAgICAgICB0aGlzLndlZWtOdW1iZXJzID0gJ3cnO1xuICAgIH1cbiAgICBCc0RhdGVwaWNrZXJDb25maWcuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBJbmplY3RhYmxlIH1cbiAgICBdO1xuICAgIHJldHVybiBCc0RhdGVwaWNrZXJDb25maWc7XG59KCkpO1xuZXhwb3J0IHsgQnNEYXRlcGlja2VyQ29uZmlnIH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKipcbiAgICAgKiBzZXRzIHVzZSBhZGFwdGl2ZSBwb3NpdGlvblxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuYWRhcHRpdmVQb3NpdGlvbjtcbiAgICAvKipcbiAgICAgKiBzZXRzIHVzZSBVVEMgZGF0ZSB0aW1lIGZvcm1hdFxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUudXNlVXRjO1xuICAgIC8qKlxuICAgICAqIHR1cm4gb24vb2ZmIGFuaW1hdGlvblxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuaXNBbmltYXRlZDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS52YWx1ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5pc0Rpc2FibGVkO1xuICAgIC8qKlxuICAgICAqIERlZmF1bHQgbWluIGRhdGUgZm9yIGFsbCBkYXRlL3JhbmdlIHBpY2tlcnNcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1pbkRhdGU7XG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBtYXggZGF0ZSBmb3IgYWxsIGRhdGUvcmFuZ2UgcGlja2Vyc1xuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWF4RGF0ZTtcbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IGRhdGUgY3VzdG9tIGNsYXNzZXMgZm9yIGFsbCBkYXRlL3JhbmdlIHBpY2tlcnNcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRhdGVDdXN0b21DbGFzc2VzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRheXNEaXNhYmxlZDtcbiAgICAvKipcbiAgICAgKiBEaXNhYmxlIHNwZWNpZmljIGRhdGVzXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kYXRlc0Rpc2FibGVkO1xuICAgIC8qKlxuICAgICAqIE1ha2VzIGRhdGVzIGZyb20gb3RoZXIgbW9udGhzIGFjdGl2ZVxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2VsZWN0RnJvbU90aGVyTW9udGg7XG4gICAgLyoqXG4gICAgICogTWFrZXMgZGF0ZXMgZnJvbSBvdGhlciBtb250aHMgYWN0aXZlXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zZWxlY3RXZWVrO1xuICAgIC8qKlxuICAgICAqIEFkZCBjbGFzcyB0byBjdXJyZW50IGRheVxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuY3VzdG9tVG9kYXlDbGFzcztcbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IG1vZGUgZm9yIGFsbCBkYXRlIHBpY2tlcnNcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1pbk1vZGU7XG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIHdoaWNoIHdpbGwgYmUgYXBwbGllZCB0byBkYXRlcGlja2VyIGNvbnRhaW5lcixcbiAgICAgKiB1c3VhbGx5IHVzZWQgdG8gc2V0IGNvbG9yIHRoZW1lXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5jb250YWluZXJDbGFzcztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kaXNwbGF5TW9udGhzO1xuICAgIC8qKlxuICAgICAqIEFsbG93cyB0byBoaWRlIHdlZWsgbnVtYmVycyBpbiBkYXRlcGlja2VyXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zaG93V2Vla051bWJlcnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF0ZUlucHV0Rm9ybWF0O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnJhbmdlU2VwYXJhdG9yO1xuICAgIC8qKlxuICAgICAqIERhdGUgZm9ybWF0IGZvciBkYXRlIHJhbmdlIGlucHV0IGZpZWxkXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5yYW5nZUlucHV0Rm9ybWF0O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1vbnRoVGl0bGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUueWVhclRpdGxlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRheUxhYmVsO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1vbnRoTGFiZWw7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUueWVhckxhYmVsO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLndlZWtOdW1iZXJzO1xufVxuIl19