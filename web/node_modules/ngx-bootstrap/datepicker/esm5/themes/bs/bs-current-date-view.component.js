/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var BsCurrentDateViewComponent = /** @class */ (function () {
    function BsCurrentDateViewComponent() {
    }
    BsCurrentDateViewComponent.propDecorators = {
        title: [{ type: Input }]
    };
BsCurrentDateViewComponent.ɵfac = function BsCurrentDateViewComponent_Factory(t) { return new (t || BsCurrentDateViewComponent)(); };
BsCurrentDateViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BsCurrentDateViewComponent, selectors: [["bs-current-date"]], inputs: { title: "title" }, decls: 3, vars: 1, consts: [[1, "current-timedate"]], template: function BsCurrentDateViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsCurrentDateViewComponent, [{
        type: Component,
        args: [{
                selector: 'bs-current-date',
                template: "<div class=\"current-timedate\"><span>{{ title }}</span></div>"
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }] }); })();
    return BsCurrentDateViewComponent;
}());
export { BsCurrentDateViewComponent };
if (false) {
    /** @type {?} */
    BsCurrentDateViewComponent.prototype.title;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9uZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXIvZXNtNS90aGVtZXMvYnMvYnMtY3VycmVudC1kYXRlLXZpZXcuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7S0FFSyxBQU1DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFHQSIsImZpbGUiOiJicy1jdXJyZW50LWRhdGUtdmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xudmFyIEJzQ3VycmVudERhdGVWaWV3Q29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJzQ3VycmVudERhdGVWaWV3Q29tcG9uZW50KCkge1xuICAgIH1cbiAgICBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdicy1jdXJyZW50LWRhdGUnLFxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCI8ZGl2IGNsYXNzPVxcXCJjdXJyZW50LXRpbWVkYXRlXFxcIj48c3Bhbj57eyB0aXRsZSB9fTwvc3Bhbj48L2Rpdj5cIlxuICAgICAgICAgICAgICAgIH1dIH1cbiAgICBdO1xuICAgIEJzQ3VycmVudERhdGVWaWV3Q29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgICAgICB0aXRsZTogW3sgdHlwZTogSW5wdXQgfV1cbiAgICB9O1xuICAgIHJldHVybiBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudDtcbn0oKSk7XG5leHBvcnQgeyBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudCB9O1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzQ3VycmVudERhdGVWaWV3Q29tcG9uZW50LnByb3RvdHlwZS50aXRsZTtcbn1cbiJdfQ==