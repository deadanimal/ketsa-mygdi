import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { Ng2DropdownModule } from 'ng2-material-dropdown';
import { HighlightPipe } from './core/pipes/highlight.pipe';
import { DragProvider } from './core/providers/drag-provider';
import { OptionsProvider } from './core/providers/options-provider';
import { TagInputComponent } from './components/tag-input/tag-input';
import { DeleteIconComponent } from './components/icon/icon';
import { TagInputForm } from './components/tag-input-form/tag-input-form.component';
import { TagComponent } from './components/tag/tag.component';
import { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';
import { TagRipple } from './components/tag/tag-ripple.component';
import * as ɵngcc0 from '@angular/core';
const optionsProvider = new OptionsProvider();
let TagInputModule = class TagInputModule {
    /**
     * @name withDefaults
     * @param options {Options}
     */
    static withDefaults(options) {
        optionsProvider.setOptions(options);
    }
};
TagInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TagInputModule });
TagInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TagInputModule_Factory(t) { return new (t || TagInputModule)(); }, providers: [
        DragProvider,
        { provide: COMPOSITION_BUFFER_MODE, useValue: false },
    ], imports: [[
            CommonModule,
            ReactiveFormsModule,
            FormsModule,
            Ng2DropdownModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TagInputModule, { declarations: function () { return [TagInputComponent,
        DeleteIconComponent,
        TagInputForm,
        TagComponent,
        HighlightPipe,
        TagInputDropdown,
        TagRipple]; }, imports: function () { return [CommonModule,
        ReactiveFormsModule,
        FormsModule,
        Ng2DropdownModule]; }, exports: function () { return [TagInputComponent,
        DeleteIconComponent,
        TagInputForm,
        TagComponent,
        HighlightPipe,
        TagInputDropdown,
        TagRipple]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TagInputModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    FormsModule,
                    Ng2DropdownModule
                ],
                declarations: [
                    TagInputComponent,
                    DeleteIconComponent,
                    TagInputForm,
                    TagComponent,
                    HighlightPipe,
                    TagInputDropdown,
                    TagRipple
                ],
                exports: [
                    TagInputComponent,
                    DeleteIconComponent,
                    TagInputForm,
                    TagComponent,
                    HighlightPipe,
                    TagInputDropdown,
                    TagRipple
                ],
                providers: [
                    DragProvider,
                    { provide: COMPOSITION_BUFFER_MODE, useValue: false },
                ]
            }]
    }], null, null); })();
export { TagInputModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9uZ3gtY2hpcHMvZXNtMjAxNS90YWctaW5wdXQubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFjQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQVNFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQWdDaUIiLCJmaWxlIjoidGFnLWlucHV0Lm1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSwgRm9ybXNNb2R1bGUsIENPTVBPU0lUSU9OX0JVRkZFUl9NT0RFIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nMkRyb3Bkb3duTW9kdWxlIH0gZnJvbSAnbmcyLW1hdGVyaWFsLWRyb3Bkb3duJztcbmltcG9ydCB7IEhpZ2hsaWdodFBpcGUgfSBmcm9tICcuL2NvcmUvcGlwZXMvaGlnaGxpZ2h0LnBpcGUnO1xuaW1wb3J0IHsgRHJhZ1Byb3ZpZGVyIH0gZnJvbSAnLi9jb3JlL3Byb3ZpZGVycy9kcmFnLXByb3ZpZGVyJztcbmltcG9ydCB7IE9wdGlvbnNQcm92aWRlciB9IGZyb20gJy4vY29yZS9wcm92aWRlcnMvb3B0aW9ucy1wcm92aWRlcic7XG5pbXBvcnQgeyBUYWdJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YWctaW5wdXQvdGFnLWlucHV0JztcbmltcG9ydCB7IERlbGV0ZUljb25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvaWNvbi9pY29uJztcbmltcG9ydCB7IFRhZ0lucHV0Rm9ybSB9IGZyb20gJy4vY29tcG9uZW50cy90YWctaW5wdXQtZm9ybS90YWctaW5wdXQtZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFnQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RhZy90YWcuY29tcG9uZW50JztcbmltcG9ydCB7IFRhZ0lucHV0RHJvcGRvd24gfSBmcm9tICcuL2NvbXBvbmVudHMvZHJvcGRvd24vdGFnLWlucHV0LWRyb3Bkb3duLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYWdSaXBwbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFnL3RhZy1yaXBwbGUuY29tcG9uZW50JztcbmNvbnN0IG9wdGlvbnNQcm92aWRlciA9IG5ldyBPcHRpb25zUHJvdmlkZXIoKTtcbmxldCBUYWdJbnB1dE1vZHVsZSA9IGNsYXNzIFRhZ0lucHV0TW9kdWxlIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZSB3aXRoRGVmYXVsdHNcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyB7T3B0aW9uc31cbiAgICAgKi9cbiAgICBzdGF0aWMgd2l0aERlZmF1bHRzKG9wdGlvbnMpIHtcbiAgICAgICAgb3B0aW9uc1Byb3ZpZGVyLnNldE9wdGlvbnMob3B0aW9ucyk7XG4gICAgfVxufTtcblRhZ0lucHV0TW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGltcG9ydHM6IFtcbiAgICAgICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgICAgIE5nMkRyb3Bkb3duTW9kdWxlXG4gICAgICAgIF0sXG4gICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgVGFnSW5wdXRDb21wb25lbnQsXG4gICAgICAgICAgICBEZWxldGVJY29uQ29tcG9uZW50LFxuICAgICAgICAgICAgVGFnSW5wdXRGb3JtLFxuICAgICAgICAgICAgVGFnQ29tcG9uZW50LFxuICAgICAgICAgICAgSGlnaGxpZ2h0UGlwZSxcbiAgICAgICAgICAgIFRhZ0lucHV0RHJvcGRvd24sXG4gICAgICAgICAgICBUYWdSaXBwbGVcbiAgICAgICAgXSxcbiAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgVGFnSW5wdXRDb21wb25lbnQsXG4gICAgICAgICAgICBEZWxldGVJY29uQ29tcG9uZW50LFxuICAgICAgICAgICAgVGFnSW5wdXRGb3JtLFxuICAgICAgICAgICAgVGFnQ29tcG9uZW50LFxuICAgICAgICAgICAgSGlnaGxpZ2h0UGlwZSxcbiAgICAgICAgICAgIFRhZ0lucHV0RHJvcGRvd24sXG4gICAgICAgICAgICBUYWdSaXBwbGVcbiAgICAgICAgXSxcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICBEcmFnUHJvdmlkZXIsXG4gICAgICAgICAgICB7IHByb3ZpZGU6IENPTVBPU0lUSU9OX0JVRkZFUl9NT0RFLCB1c2VWYWx1ZTogZmFsc2UgfSxcbiAgICAgICAgXVxuICAgIH0pXG5dLCBUYWdJbnB1dE1vZHVsZSk7XG5leHBvcnQgeyBUYWdJbnB1dE1vZHVsZSB9O1xuIl19