/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiFilterBuilderField } from './base/filter-builder-field-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxiFieldComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiFieldComponent, _super);
    function DxiFieldComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiFieldComponent.prototype, "_optionPath", {
        get: function () {
            return 'fields';
        },
        enumerable: true,
        configurable: true
    });
    DxiFieldComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiFieldComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiFieldComponent);
DxiFieldComponent.ɵfac = function DxiFieldComponent_Factory(t) { return new (t || DxiFieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiFieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiFieldComponent, selectors: [["dxi-field"]], inputs: { calculateFilterExpression: "calculateFilterExpression", caption: "caption", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editorOptions: "editorOptions", editorTemplate: "editorTemplate", falseText: "falseText", filterOperations: "filterOperations", format: "format", lookup: "lookup", name: "name", trueText: "trueText", allowCrossGroupCalculation: "allowCrossGroupCalculation", allowExpandAll: "allowExpandAll", allowFiltering: "allowFiltering", allowSorting: "allowSorting", allowSortingBySummary: "allowSortingBySummary", area: "area", areaIndex: "areaIndex", calculateCustomSummary: "calculateCustomSummary", calculateSummaryValue: "calculateSummaryValue", displayFolder: "displayFolder", expanded: "expanded", filterType: "filterType", filterValues: "filterValues", groupIndex: "groupIndex", groupInterval: "groupInterval", groupName: "groupName", headerFilter: "headerFilter", isMeasure: "isMeasure", precision: "precision", runningTotal: "runningTotal", selector: "selector", showGrandTotals: "showGrandTotals", showTotals: "showTotals", showValues: "showValues", sortBy: "sortBy", sortBySummaryField: "sortBySummaryField", sortBySummaryPath: "sortBySummaryPath", sortingMethod: "sortingMethod", sortOrder: "sortOrder", summaryDisplayMode: "summaryDisplayMode", summaryType: "summaryType", visible: "visible", width: "width", wordWrapEnabled: "wordWrapEnabled" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFieldComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-field',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'calculateFilterExpression',
                    'caption',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editorOptions',
                    'editorTemplate',
                    'falseText',
                    'filterOperations',
                    'format',
                    'lookup',
                    'name',
                    'trueText',
                    'allowCrossGroupCalculation',
                    'allowExpandAll',
                    'allowFiltering',
                    'allowSorting',
                    'allowSortingBySummary',
                    'area',
                    'areaIndex',
                    'calculateCustomSummary',
                    'calculateSummaryValue',
                    'displayFolder',
                    'expanded',
                    'filterType',
                    'filterValues',
                    'groupIndex',
                    'groupInterval',
                    'groupName',
                    'headerFilter',
                    'isMeasure',
                    'precision',
                    'runningTotal',
                    'selector',
                    'showGrandTotals',
                    'showTotals',
                    'showValues',
                    'sortBy',
                    'sortBySummaryField',
                    'sortBySummaryPath',
                    'sortingMethod',
                    'sortOrder',
                    'summaryDisplayMode',
                    'summaryType',
                    'visible',
                    'width',
                    'wordWrapEnabled'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxiFieldComponent;
}(DxiFilterBuilderField));
export { DxiFieldComponent };
var DxiFieldModule = /** @class */ (function () {
    function DxiFieldModule() {
    }
DxiFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiFieldModule });
DxiFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiFieldModule_Factory(t) { return new (t || DxiFieldModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiFieldModule, { declarations: [DxiFieldComponent], exports: [DxiFieldComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiFieldComponent
                ],
                exports: [
                    DxiFieldComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiFieldModule;
}());
export { DxiFieldModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtNS91aS9uZXN0ZWQvZmllbGQtZHhpLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0Q0FtQjRDLEFBd0RyQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FJbUI7Ozs7OztLQU1yQjs7Ozs7Ozs7Ozs7Ozs7Z0RBVWtCIiwiZmlsZSI6ImZpZWxkLWR4aS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMTkuMi42XHJcbiAqIEJ1aWxkIGRhdGU6IFRodSBKYW4gMzAgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcclxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXHJcbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBOZ01vZHVsZSwgSG9zdCwgU2tpcFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCwgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4aUZpbHRlckJ1aWxkZXJGaWVsZCB9IGZyb20gJy4vYmFzZS9maWx0ZXItYnVpbGRlci1maWVsZC1keGknO1xyXG52YXIgRHhpRmllbGRDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICB0c2xpYl8xLl9fZXh0ZW5kcyhEeGlGaWVsZENvbXBvbmVudCwgX3N1cGVyKTtcclxuICAgIGZ1bmN0aW9uIER4aUZpZWxkQ29tcG9uZW50KHBhcmVudE9wdGlvbkhvc3QsIG9wdGlvbkhvc3QpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKF90aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QoX3RoaXMsIF90aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKF90aGlzKSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KER4aUZpZWxkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJfb3B0aW9uUGF0aFwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnZmllbGRzJztcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIER4aUZpZWxkQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xyXG4gICAgICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogU2tpcFNlbGYgfSwgeyB0eXBlOiBIb3N0IH1dIH0sXHJcbiAgICAgICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBIb3N0IH1dIH1cclxuICAgIF07IH07XHJcbiAgICBEeGlGaWVsZENvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgQ29tcG9uZW50KHtcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdkeGktZmllbGQnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgICAgICdjYWxjdWxhdGVGaWx0ZXJFeHByZXNzaW9uJyxcclxuICAgICAgICAgICAgICAgICdjYXB0aW9uJyxcclxuICAgICAgICAgICAgICAgICdjdXN0b21pemVUZXh0JyxcclxuICAgICAgICAgICAgICAgICdkYXRhRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ2RhdGFUeXBlJyxcclxuICAgICAgICAgICAgICAgICdlZGl0b3JPcHRpb25zJyxcclxuICAgICAgICAgICAgICAgICdlZGl0b3JUZW1wbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAnZmFsc2VUZXh0JyxcclxuICAgICAgICAgICAgICAgICdmaWx0ZXJPcGVyYXRpb25zJyxcclxuICAgICAgICAgICAgICAgICdmb3JtYXQnLFxyXG4gICAgICAgICAgICAgICAgJ2xvb2t1cCcsXHJcbiAgICAgICAgICAgICAgICAnbmFtZScsXHJcbiAgICAgICAgICAgICAgICAndHJ1ZVRleHQnLFxyXG4gICAgICAgICAgICAgICAgJ2FsbG93Q3Jvc3NHcm91cENhbGN1bGF0aW9uJyxcclxuICAgICAgICAgICAgICAgICdhbGxvd0V4cGFuZEFsbCcsXHJcbiAgICAgICAgICAgICAgICAnYWxsb3dGaWx0ZXJpbmcnLFxyXG4gICAgICAgICAgICAgICAgJ2FsbG93U29ydGluZycsXHJcbiAgICAgICAgICAgICAgICAnYWxsb3dTb3J0aW5nQnlTdW1tYXJ5JyxcclxuICAgICAgICAgICAgICAgICdhcmVhJyxcclxuICAgICAgICAgICAgICAgICdhcmVhSW5kZXgnLFxyXG4gICAgICAgICAgICAgICAgJ2NhbGN1bGF0ZUN1c3RvbVN1bW1hcnknLFxyXG4gICAgICAgICAgICAgICAgJ2NhbGN1bGF0ZVN1bW1hcnlWYWx1ZScsXHJcbiAgICAgICAgICAgICAgICAnZGlzcGxheUZvbGRlcicsXHJcbiAgICAgICAgICAgICAgICAnZXhwYW5kZWQnLFxyXG4gICAgICAgICAgICAgICAgJ2ZpbHRlclR5cGUnLFxyXG4gICAgICAgICAgICAgICAgJ2ZpbHRlclZhbHVlcycsXHJcbiAgICAgICAgICAgICAgICAnZ3JvdXBJbmRleCcsXHJcbiAgICAgICAgICAgICAgICAnZ3JvdXBJbnRlcnZhbCcsXHJcbiAgICAgICAgICAgICAgICAnZ3JvdXBOYW1lJyxcclxuICAgICAgICAgICAgICAgICdoZWFkZXJGaWx0ZXInLFxyXG4gICAgICAgICAgICAgICAgJ2lzTWVhc3VyZScsXHJcbiAgICAgICAgICAgICAgICAncHJlY2lzaW9uJyxcclxuICAgICAgICAgICAgICAgICdydW5uaW5nVG90YWwnLFxyXG4gICAgICAgICAgICAgICAgJ3NlbGVjdG9yJyxcclxuICAgICAgICAgICAgICAgICdzaG93R3JhbmRUb3RhbHMnLFxyXG4gICAgICAgICAgICAgICAgJ3Nob3dUb3RhbHMnLFxyXG4gICAgICAgICAgICAgICAgJ3Nob3dWYWx1ZXMnLFxyXG4gICAgICAgICAgICAgICAgJ3NvcnRCeScsXHJcbiAgICAgICAgICAgICAgICAnc29ydEJ5U3VtbWFyeUZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdzb3J0QnlTdW1tYXJ5UGF0aCcsXHJcbiAgICAgICAgICAgICAgICAnc29ydGluZ01ldGhvZCcsXHJcbiAgICAgICAgICAgICAgICAnc29ydE9yZGVyJyxcclxuICAgICAgICAgICAgICAgICdzdW1tYXJ5RGlzcGxheU1vZGUnLFxyXG4gICAgICAgICAgICAgICAgJ3N1bW1hcnlUeXBlJyxcclxuICAgICAgICAgICAgICAgICd2aXNpYmxlJyxcclxuICAgICAgICAgICAgICAgICd3aWR0aCcsXHJcbiAgICAgICAgICAgICAgICAnd29yZFdyYXBFbmFibGVkJ1xyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBzdHlsZXM6IFsnJ11cclxuICAgICAgICB9KSxcclxuICAgICAgICB0c2xpYl8xLl9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIHRzbGliXzEuX19wYXJhbSgwLCBIb3N0KCkpLFxyXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgxLCBIb3N0KCkpLFxyXG4gICAgICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0XSlcclxuICAgIF0sIER4aUZpZWxkQ29tcG9uZW50KTtcclxuICAgIHJldHVybiBEeGlGaWVsZENvbXBvbmVudDtcclxufShEeGlGaWx0ZXJCdWlsZGVyRmllbGQpKTtcclxuZXhwb3J0IHsgRHhpRmllbGRDb21wb25lbnQgfTtcclxudmFyIER4aUZpZWxkTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRHhpRmllbGRNb2R1bGUoKSB7XHJcbiAgICB9XHJcbiAgICBEeGlGaWVsZE1vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgTmdNb2R1bGUoe1xyXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgIER4aUZpZWxkQ29tcG9uZW50XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgICAgIER4aUZpZWxkQ29tcG9uZW50XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgfSlcclxuICAgIF0sIER4aUZpZWxkTW9kdWxlKTtcclxuICAgIHJldHVybiBEeGlGaWVsZE1vZHVsZTtcclxufSgpKTtcclxuZXhwb3J0IHsgRHhpRmllbGRNb2R1bGUgfTtcciJdfQ==