/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoFormat } from './base/format';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoValueFormatComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoValueFormatComponent, _super);
    function DxoValueFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValueFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoValueFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoValueFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoValueFormatComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValueFormatComponent);
DxoValueFormatComponent.ɵfac = function DxoValueFormatComponent_Factory(t) { return new (t || DxoValueFormatComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoValueFormatComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoValueFormatComponent, selectors: [["dxo-value-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValueFormatComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoValueFormatComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-value-format',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxoValueFormatComponent;
}(DxoFormat));
export { DxoValueFormatComponent };
var DxoValueFormatModule = /** @class */ (function () {
    function DxoValueFormatModule() {
    }
DxoValueFormatModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoValueFormatModule });
DxoValueFormatModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoValueFormatModule_Factory(t) { return new (t || DxoValueFormatModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoValueFormatModule, { declarations: [DxoValueFormatComponent], exports: [DxoValueFormatComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoValueFormatModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoValueFormatComponent
                ],
                exports: [
                    DxoValueFormatComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoValueFormatModule;
}());
export { DxoValueFormatModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtNS91aS9uZXN0ZWQvdmFsdWUtZm9ybWF0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrREFzQmtELEFBYzNDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQUl5Qjs7Ozs7O0tBTTNCOzs7Ozs7Ozs7Ozs7OztnREFVd0IiLCJmaWxlIjoidmFsdWUtZm9ybWF0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBIb3N0LCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0LCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhvRm9ybWF0IH0gZnJvbSAnLi9iYXNlL2Zvcm1hdCc7XHJcbnZhciBEeG9WYWx1ZUZvcm1hdENvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIHRzbGliXzEuX19leHRlbmRzKER4b1ZhbHVlRm9ybWF0Q29tcG9uZW50LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRHhvVmFsdWVGb3JtYXRDb21wb25lbnQocGFyZW50T3B0aW9uSG9zdCwgb3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24oX3RoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdChfdGhpcywgX3RoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQoX3RoaXMpKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhvVmFsdWVGb3JtYXRDb21wb25lbnQucHJvdG90eXBlLCBcIl9vcHRpb25QYXRoXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICd2YWx1ZUZvcm1hdCc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBEeG9WYWx1ZUZvcm1hdENvbXBvbmVudC5wcm90b3R5cGUubmdPbkRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9O1xyXG4gICAgRHhvVmFsdWVGb3JtYXRDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXHJcbiAgICAgICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBTa2lwU2VsZiB9LCB7IHR5cGU6IEhvc3QgfV0gfSxcclxuICAgICAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IEhvc3QgfV0gfVxyXG4gICAgXTsgfTtcclxuICAgIER4b1ZhbHVlRm9ybWF0Q29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBDb21wb25lbnQoe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogJ2R4by12YWx1ZS1mb3JtYXQnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgICAgICdjdXJyZW5jeScsXHJcbiAgICAgICAgICAgICAgICAnZm9ybWF0dGVyJyxcclxuICAgICAgICAgICAgICAgICdwYXJzZXInLFxyXG4gICAgICAgICAgICAgICAgJ3ByZWNpc2lvbicsXHJcbiAgICAgICAgICAgICAgICAndHlwZSdcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgc3R5bGVzOiBbJyddXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgdHNsaWJfMS5fX3BhcmFtKDAsIFNraXBTZWxmKCkpLCB0c2xpYl8xLl9fcGFyYW0oMCwgSG9zdCgpKSxcclxuICAgICAgICB0c2xpYl8xLl9fcGFyYW0oMSwgSG9zdCgpKSxcclxuICAgICAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICAgICAgTmVzdGVkT3B0aW9uSG9zdF0pXHJcbiAgICBdLCBEeG9WYWx1ZUZvcm1hdENvbXBvbmVudCk7XHJcbiAgICByZXR1cm4gRHhvVmFsdWVGb3JtYXRDb21wb25lbnQ7XHJcbn0oRHhvRm9ybWF0KSk7XHJcbmV4cG9ydCB7IER4b1ZhbHVlRm9ybWF0Q29tcG9uZW50IH07XHJcbnZhciBEeG9WYWx1ZUZvcm1hdE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIER4b1ZhbHVlRm9ybWF0TW9kdWxlKCkge1xyXG4gICAgfVxyXG4gICAgRHhvVmFsdWVGb3JtYXRNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgICAgIE5nTW9kdWxlKHtcclxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgICAgICAgICBEeG9WYWx1ZUZvcm1hdENvbXBvbmVudFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgICAgICAgICBEeG9WYWx1ZUZvcm1hdENvbXBvbmVudFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH0pXHJcbiAgICBdLCBEeG9WYWx1ZUZvcm1hdE1vZHVsZSk7XHJcbiAgICByZXR1cm4gRHhvVmFsdWVGb3JtYXRNb2R1bGU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IER4b1ZhbHVlRm9ybWF0TW9kdWxlIH07XHIiXX0=