/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiChartSeries } from './base/chart-series-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxiSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiSeriesComponent, _super);
    function DxiSeriesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiSeriesComponent.prototype, "_optionPath", {
        get: function () {
            return 'series';
        },
        enumerable: true,
        configurable: true
    });
    DxiSeriesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiSeriesComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiSeriesComponent);
DxiSeriesComponent.ɵfac = function DxiSeriesComponent_Factory(t) { return new (t || DxiSeriesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiSeriesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiSeriesComponent, selectors: [["dxi-series"]], inputs: { aggregation: "aggregation", argumentField: "argumentField", axis: "axis", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", name: "name", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", stack: "stack", tag: "tag", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", argumentType: "argumentType", minSegmentSize: "minSegmentSize", smallValuesGrouping: "smallValuesGrouping", closed: "closed" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiSeriesComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiSeriesComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-series',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'aggregation',
                    'argumentField',
                    'axis',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'name',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'stack',
                    'tag',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'argumentType',
                    'minSegmentSize',
                    'smallValuesGrouping',
                    'closed'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxiSeriesComponent;
}(DxiChartSeries));
export { DxiSeriesComponent };
var DxiSeriesModule = /** @class */ (function () {
    function DxiSeriesModule() {
    }
DxiSeriesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiSeriesModule });
DxiSeriesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiSeriesModule_Factory(t) { return new (t || DxiSeriesModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiSeriesModule, { declarations: [DxiSeriesComponent], exports: [DxiSeriesComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiSeriesModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiSeriesComponent
                ],
                exports: [
                    DxiSeriesComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiSeriesModule;
}());
export { DxiSeriesModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtNS91aS9uZXN0ZWQvc2VyaWVzLWR4aS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkNBbUI2QyxBQXFEdEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBSW9COzs7Ozs7S0FNdEI7Ozs7Ozs7Ozs7Ozs7O2dEQVVtQiIsImZpbGUiOiJzZXJpZXMtZHhpLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBIb3N0LCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0LCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhpQ2hhcnRTZXJpZXMgfSBmcm9tICcuL2Jhc2UvY2hhcnQtc2VyaWVzLWR4aSc7XHJcbnZhciBEeGlTZXJpZXNDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICB0c2xpYl8xLl9fZXh0ZW5kcyhEeGlTZXJpZXNDb21wb25lbnQsIF9zdXBlcik7XHJcbiAgICBmdW5jdGlvbiBEeGlTZXJpZXNDb21wb25lbnQocGFyZW50T3B0aW9uSG9zdCwgb3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24oX3RoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdChfdGhpcywgX3RoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQoX3RoaXMpKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhpU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJfb3B0aW9uUGF0aFwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnc2VyaWVzJztcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIER4aVNlcmllc0NvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcclxuICAgICAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IFNraXBTZWxmIH0sIHsgdHlwZTogSG9zdCB9XSB9LFxyXG4gICAgICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogSG9zdCB9XSB9XHJcbiAgICBdOyB9O1xyXG4gICAgRHhpU2VyaWVzQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBDb21wb25lbnQoe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogJ2R4aS1zZXJpZXMnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgICAgICdhZ2dyZWdhdGlvbicsXHJcbiAgICAgICAgICAgICAgICAnYXJndW1lbnRGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAnYXhpcycsXHJcbiAgICAgICAgICAgICAgICAnYmFyT3ZlcmxhcEdyb3VwJyxcclxuICAgICAgICAgICAgICAgICdiYXJQYWRkaW5nJyxcclxuICAgICAgICAgICAgICAgICdiYXJXaWR0aCcsXHJcbiAgICAgICAgICAgICAgICAnYm9yZGVyJyxcclxuICAgICAgICAgICAgICAgICdjbG9zZVZhbHVlRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ2NvbG9yJyxcclxuICAgICAgICAgICAgICAgICdjb3JuZXJSYWRpdXMnLFxyXG4gICAgICAgICAgICAgICAgJ2Rhc2hTdHlsZScsXHJcbiAgICAgICAgICAgICAgICAnaGlnaFZhbHVlRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ2hvdmVyTW9kZScsXHJcbiAgICAgICAgICAgICAgICAnaG92ZXJTdHlsZScsXHJcbiAgICAgICAgICAgICAgICAnaWdub3JlRW1wdHlQb2ludHMnLFxyXG4gICAgICAgICAgICAgICAgJ2lubmVyQ29sb3InLFxyXG4gICAgICAgICAgICAgICAgJ2xhYmVsJyxcclxuICAgICAgICAgICAgICAgICdsb3dWYWx1ZUZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdtYXhMYWJlbENvdW50JyxcclxuICAgICAgICAgICAgICAgICdtaW5CYXJTaXplJyxcclxuICAgICAgICAgICAgICAgICduYW1lJyxcclxuICAgICAgICAgICAgICAgICdvcGFjaXR5JyxcclxuICAgICAgICAgICAgICAgICdvcGVuVmFsdWVGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAncGFuZScsXHJcbiAgICAgICAgICAgICAgICAncG9pbnQnLFxyXG4gICAgICAgICAgICAgICAgJ3JhbmdlVmFsdWUxRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ3JhbmdlVmFsdWUyRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ3JlZHVjdGlvbicsXHJcbiAgICAgICAgICAgICAgICAnc2VsZWN0aW9uTW9kZScsXHJcbiAgICAgICAgICAgICAgICAnc2VsZWN0aW9uU3R5bGUnLFxyXG4gICAgICAgICAgICAgICAgJ3Nob3dJbkxlZ2VuZCcsXHJcbiAgICAgICAgICAgICAgICAnc2l6ZUZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdzdGFjaycsXHJcbiAgICAgICAgICAgICAgICAndGFnJyxcclxuICAgICAgICAgICAgICAgICd0YWdGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAndHlwZScsXHJcbiAgICAgICAgICAgICAgICAndmFsdWVFcnJvckJhcicsXHJcbiAgICAgICAgICAgICAgICAndmFsdWVGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAndmlzaWJsZScsXHJcbiAgICAgICAgICAgICAgICAnd2lkdGgnLFxyXG4gICAgICAgICAgICAgICAgJ2FyZ3VtZW50VHlwZScsXHJcbiAgICAgICAgICAgICAgICAnbWluU2VnbWVudFNpemUnLFxyXG4gICAgICAgICAgICAgICAgJ3NtYWxsVmFsdWVzR3JvdXBpbmcnLFxyXG4gICAgICAgICAgICAgICAgJ2Nsb3NlZCdcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgc3R5bGVzOiBbJyddXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgdHNsaWJfMS5fX3BhcmFtKDAsIFNraXBTZWxmKCkpLCB0c2xpYl8xLl9fcGFyYW0oMCwgSG9zdCgpKSxcclxuICAgICAgICB0c2xpYl8xLl9fcGFyYW0oMSwgSG9zdCgpKSxcclxuICAgICAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICAgICAgTmVzdGVkT3B0aW9uSG9zdF0pXHJcbiAgICBdLCBEeGlTZXJpZXNDb21wb25lbnQpO1xyXG4gICAgcmV0dXJuIER4aVNlcmllc0NvbXBvbmVudDtcclxufShEeGlDaGFydFNlcmllcykpO1xyXG5leHBvcnQgeyBEeGlTZXJpZXNDb21wb25lbnQgfTtcclxudmFyIER4aVNlcmllc01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIER4aVNlcmllc01vZHVsZSgpIHtcclxuICAgIH1cclxuICAgIER4aVNlcmllc01vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgTmdNb2R1bGUoe1xyXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgIER4aVNlcmllc0NvbXBvbmVudFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgICAgICAgICBEeGlTZXJpZXNDb21wb25lbnRcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICB9KVxyXG4gICAgXSwgRHhpU2VyaWVzTW9kdWxlKTtcclxuICAgIHJldHVybiBEeGlTZXJpZXNNb2R1bGU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IER4aVNlcmllc01vZHVsZSB9O1xyIl19