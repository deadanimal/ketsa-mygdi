/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiFilterBuilderField } from './base/filter-builder-field-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxiFieldComponent = class DxiFieldComponent extends DxiFilterBuilderField {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'fields';
    }
};
DxiFieldComponent.ɵfac = function DxiFieldComponent_Factory(t) { return new (t || DxiFieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiFieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiFieldComponent, selectors: [["dxi-field"]], inputs: { calculateFilterExpression: "calculateFilterExpression", caption: "caption", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editorOptions: "editorOptions", editorTemplate: "editorTemplate", falseText: "falseText", filterOperations: "filterOperations", format: "format", lookup: "lookup", name: "name", trueText: "trueText", allowCrossGroupCalculation: "allowCrossGroupCalculation", allowExpandAll: "allowExpandAll", allowFiltering: "allowFiltering", allowSorting: "allowSorting", allowSortingBySummary: "allowSortingBySummary", area: "area", areaIndex: "areaIndex", calculateCustomSummary: "calculateCustomSummary", calculateSummaryValue: "calculateSummaryValue", displayFolder: "displayFolder", expanded: "expanded", filterType: "filterType", filterValues: "filterValues", groupIndex: "groupIndex", groupInterval: "groupInterval", groupName: "groupName", headerFilter: "headerFilter", isMeasure: "isMeasure", precision: "precision", runningTotal: "runningTotal", selector: "selector", showGrandTotals: "showGrandTotals", showTotals: "showTotals", showValues: "showValues", sortBy: "sortBy", sortBySummaryField: "sortBySummaryField", sortBySummaryPath: "sortBySummaryPath", sortingMethod: "sortingMethod", sortOrder: "sortOrder", summaryDisplayMode: "summaryDisplayMode", summaryType: "summaryType", visible: "visible", width: "width", wordWrapEnabled: "wordWrapEnabled" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFieldComponent_Template(rf, ctx) { }, styles: [""] });
DxiFieldComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
DxiFieldComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxiFieldComponent);
export { DxiFieldComponent };
let DxiFieldModule = class DxiFieldModule {
};
DxiFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiFieldModule });
DxiFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiFieldModule_Factory(t) { return new (t || DxiFieldModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-field',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'calculateFilterExpression',
                    'caption',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editorOptions',
                    'editorTemplate',
                    'falseText',
                    'filterOperations',
                    'format',
                    'lookup',
                    'name',
                    'trueText',
                    'allowCrossGroupCalculation',
                    'allowExpandAll',
                    'allowFiltering',
                    'allowSorting',
                    'allowSortingBySummary',
                    'area',
                    'areaIndex',
                    'calculateCustomSummary',
                    'calculateSummaryValue',
                    'displayFolder',
                    'expanded',
                    'filterType',
                    'filterValues',
                    'groupIndex',
                    'groupInterval',
                    'groupName',
                    'headerFilter',
                    'isMeasure',
                    'precision',
                    'runningTotal',
                    'selector',
                    'showGrandTotals',
                    'showTotals',
                    'showValues',
                    'sortBy',
                    'sortBySummaryField',
                    'sortBySummaryPath',
                    'sortingMethod',
                    'sortOrder',
                    'summaryDisplayMode',
                    'summaryType',
                    'visible',
                    'width',
                    'wordWrapEnabled'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiFieldModule, { declarations: [DxiFieldComponent], exports: [DxiFieldComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiFieldComponent
                ],
                exports: [
                    DxiFieldComponent
                ]
            }]
    }], null, null); })();
export { DxiFieldModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtMjAxNS91aS9uZXN0ZWQvZmllbGQtZHhpLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7Ozs7Ozs7Ozs7NHFEQVNFOzs7Ozt3Q0FLc0MsQUF3RHJDOzs7Ozs7Ozs7RUFPRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFVaUIiLCJmaWxlIjoiZmllbGQtZHhpLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBIb3N0LCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0LCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhpRmlsdGVyQnVpbGRlckZpZWxkIH0gZnJvbSAnLi9iYXNlL2ZpbHRlci1idWlsZGVyLWZpZWxkLWR4aSc7XHJcbmxldCBEeGlGaWVsZENvbXBvbmVudCA9IGNsYXNzIER4aUZpZWxkQ29tcG9uZW50IGV4dGVuZHMgRHhpRmlsdGVyQnVpbGRlckZpZWxkIHtcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3QsIG9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuICAgIGdldCBfb3B0aW9uUGF0aCgpIHtcclxuICAgICAgICByZXR1cm4gJ2ZpZWxkcyc7XHJcbiAgICB9XHJcbn07XHJcbkR4aUZpZWxkQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBTa2lwU2VsZiB9LCB7IHR5cGU6IEhvc3QgfV0gfSxcclxuICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogSG9zdCB9XSB9XHJcbl07XHJcbkR4aUZpZWxkQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIENvbXBvbmVudCh7XHJcbiAgICAgICAgc2VsZWN0b3I6ICdkeGktZmllbGQnLFxyXG4gICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XSxcclxuICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgJ2NhbGN1bGF0ZUZpbHRlckV4cHJlc3Npb24nLFxyXG4gICAgICAgICAgICAnY2FwdGlvbicsXHJcbiAgICAgICAgICAgICdjdXN0b21pemVUZXh0JyxcclxuICAgICAgICAgICAgJ2RhdGFGaWVsZCcsXHJcbiAgICAgICAgICAgICdkYXRhVHlwZScsXHJcbiAgICAgICAgICAgICdlZGl0b3JPcHRpb25zJyxcclxuICAgICAgICAgICAgJ2VkaXRvclRlbXBsYXRlJyxcclxuICAgICAgICAgICAgJ2ZhbHNlVGV4dCcsXHJcbiAgICAgICAgICAgICdmaWx0ZXJPcGVyYXRpb25zJyxcclxuICAgICAgICAgICAgJ2Zvcm1hdCcsXHJcbiAgICAgICAgICAgICdsb29rdXAnLFxyXG4gICAgICAgICAgICAnbmFtZScsXHJcbiAgICAgICAgICAgICd0cnVlVGV4dCcsXHJcbiAgICAgICAgICAgICdhbGxvd0Nyb3NzR3JvdXBDYWxjdWxhdGlvbicsXHJcbiAgICAgICAgICAgICdhbGxvd0V4cGFuZEFsbCcsXHJcbiAgICAgICAgICAgICdhbGxvd0ZpbHRlcmluZycsXHJcbiAgICAgICAgICAgICdhbGxvd1NvcnRpbmcnLFxyXG4gICAgICAgICAgICAnYWxsb3dTb3J0aW5nQnlTdW1tYXJ5JyxcclxuICAgICAgICAgICAgJ2FyZWEnLFxyXG4gICAgICAgICAgICAnYXJlYUluZGV4JyxcclxuICAgICAgICAgICAgJ2NhbGN1bGF0ZUN1c3RvbVN1bW1hcnknLFxyXG4gICAgICAgICAgICAnY2FsY3VsYXRlU3VtbWFyeVZhbHVlJyxcclxuICAgICAgICAgICAgJ2Rpc3BsYXlGb2xkZXInLFxyXG4gICAgICAgICAgICAnZXhwYW5kZWQnLFxyXG4gICAgICAgICAgICAnZmlsdGVyVHlwZScsXHJcbiAgICAgICAgICAgICdmaWx0ZXJWYWx1ZXMnLFxyXG4gICAgICAgICAgICAnZ3JvdXBJbmRleCcsXHJcbiAgICAgICAgICAgICdncm91cEludGVydmFsJyxcclxuICAgICAgICAgICAgJ2dyb3VwTmFtZScsXHJcbiAgICAgICAgICAgICdoZWFkZXJGaWx0ZXInLFxyXG4gICAgICAgICAgICAnaXNNZWFzdXJlJyxcclxuICAgICAgICAgICAgJ3ByZWNpc2lvbicsXHJcbiAgICAgICAgICAgICdydW5uaW5nVG90YWwnLFxyXG4gICAgICAgICAgICAnc2VsZWN0b3InLFxyXG4gICAgICAgICAgICAnc2hvd0dyYW5kVG90YWxzJyxcclxuICAgICAgICAgICAgJ3Nob3dUb3RhbHMnLFxyXG4gICAgICAgICAgICAnc2hvd1ZhbHVlcycsXHJcbiAgICAgICAgICAgICdzb3J0QnknLFxyXG4gICAgICAgICAgICAnc29ydEJ5U3VtbWFyeUZpZWxkJyxcclxuICAgICAgICAgICAgJ3NvcnRCeVN1bW1hcnlQYXRoJyxcclxuICAgICAgICAgICAgJ3NvcnRpbmdNZXRob2QnLFxyXG4gICAgICAgICAgICAnc29ydE9yZGVyJyxcclxuICAgICAgICAgICAgJ3N1bW1hcnlEaXNwbGF5TW9kZScsXHJcbiAgICAgICAgICAgICdzdW1tYXJ5VHlwZScsXHJcbiAgICAgICAgICAgICd2aXNpYmxlJyxcclxuICAgICAgICAgICAgJ3dpZHRoJyxcclxuICAgICAgICAgICAgJ3dvcmRXcmFwRW5hYmxlZCdcclxuICAgICAgICBdLFxyXG4gICAgICAgIHN0eWxlczogWycnXVxyXG4gICAgfSksXHJcbiAgICB0c2xpYl8xLl9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIHRzbGliXzEuX19wYXJhbSgwLCBIb3N0KCkpLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDEsIEhvc3QoKSksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0XSlcclxuXSwgRHhpRmllbGRDb21wb25lbnQpO1xyXG5leHBvcnQgeyBEeGlGaWVsZENvbXBvbmVudCB9O1xyXG5sZXQgRHhpRmllbGRNb2R1bGUgPSBjbGFzcyBEeGlGaWVsZE1vZHVsZSB7XHJcbn07XHJcbkR4aUZpZWxkTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE5nTW9kdWxlKHtcclxuICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgRHhpRmllbGRDb21wb25lbnRcclxuICAgICAgICBdLFxyXG4gICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgRHhpRmllbGRDb21wb25lbnRcclxuICAgICAgICBdLFxyXG4gICAgfSlcclxuXSwgRHhpRmllbGRNb2R1bGUpO1xyXG5leHBvcnQgeyBEeGlGaWVsZE1vZHVsZSB9O1xyIl19