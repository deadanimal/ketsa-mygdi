/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoHtmlEditorMediaResizing } from './base/html-editor-media-resizing';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoMediaResizingComponent = class DxoMediaResizingComponent extends DxoHtmlEditorMediaResizing {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'mediaResizing';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoMediaResizingComponent.ɵfac = function DxoMediaResizingComponent_Factory(t) { return new (t || DxoMediaResizingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoMediaResizingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoMediaResizingComponent, selectors: [["dxo-media-resizing"]], inputs: { allowedTargets: "allowedTargets", enabled: "enabled" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMediaResizingComponent_Template(rf, ctx) { }, styles: [""] });
DxoMediaResizingComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
DxoMediaResizingComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoMediaResizingComponent);
export { DxoMediaResizingComponent };
let DxoMediaResizingModule = class DxoMediaResizingModule {
};
DxoMediaResizingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoMediaResizingModule });
DxoMediaResizingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoMediaResizingModule_Factory(t) { return new (t || DxoMediaResizingModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoMediaResizingComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-media-resizing',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'allowedTargets',
                    'enabled'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoMediaResizingModule, { declarations: [DxoMediaResizingComponent], exports: [DxoMediaResizingComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoMediaResizingModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoMediaResizingComponent
                ],
                exports: [
                    DxoMediaResizingComponent
                ]
            }]
    }], null, null); })();
export { DxoMediaResizingModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtMjAxNS91aS9uZXN0ZWQvbWVkaWEtcmVzaXppbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBOzs7Ozs7Ozs7Ozs7Ozt5WUFZRTs7Ozs7Z0RBSzhDLEFBVzdDOzs7Ozs7Ozs7RUFPRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFVeUIiLCJmaWxlIjoibWVkaWEtcmVzaXppbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgTmdNb2R1bGUsIEhvc3QsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9IdG1sRWRpdG9yTWVkaWFSZXNpemluZyB9IGZyb20gJy4vYmFzZS9odG1sLWVkaXRvci1tZWRpYS1yZXNpemluZyc7XHJcbmxldCBEeG9NZWRpYVJlc2l6aW5nQ29tcG9uZW50ID0gY2xhc3MgRHhvTWVkaWFSZXNpemluZ0NvbXBvbmVudCBleHRlbmRzIER4b0h0bWxFZGl0b3JNZWRpYVJlc2l6aW5nIHtcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3QsIG9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuICAgIGdldCBfb3B0aW9uUGF0aCgpIHtcclxuICAgICAgICByZXR1cm4gJ21lZGlhUmVzaXppbmcnO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9XHJcbn07XHJcbkR4b01lZGlhUmVzaXppbmdDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSAoKSA9PiBbXHJcbiAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IFNraXBTZWxmIH0sIHsgdHlwZTogSG9zdCB9XSB9LFxyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBIb3N0IH1dIH1cclxuXTtcclxuRHhvTWVkaWFSZXNpemluZ0NvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBDb21wb25lbnQoe1xyXG4gICAgICAgIHNlbGVjdG9yOiAnZHhvLW1lZGlhLXJlc2l6aW5nJyxcclxuICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICAgICAgaW5wdXRzOiBbXHJcbiAgICAgICAgICAgICdhbGxvd2VkVGFyZ2V0cycsXHJcbiAgICAgICAgICAgICdlbmFibGVkJ1xyXG4gICAgICAgIF0sXHJcbiAgICAgICAgc3R5bGVzOiBbJyddXHJcbiAgICB9KSxcclxuICAgIHRzbGliXzEuX19wYXJhbSgwLCBTa2lwU2VsZigpKSwgdHNsaWJfMS5fX3BhcmFtKDAsIEhvc3QoKSksXHJcbiAgICB0c2xpYl8xLl9fcGFyYW0oMSwgSG9zdCgpKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgIE5lc3RlZE9wdGlvbkhvc3RdKVxyXG5dLCBEeG9NZWRpYVJlc2l6aW5nQ29tcG9uZW50KTtcclxuZXhwb3J0IHsgRHhvTWVkaWFSZXNpemluZ0NvbXBvbmVudCB9O1xyXG5sZXQgRHhvTWVkaWFSZXNpemluZ01vZHVsZSA9IGNsYXNzIER4b01lZGlhUmVzaXppbmdNb2R1bGUge1xyXG59O1xyXG5EeG9NZWRpYVJlc2l6aW5nTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE5nTW9kdWxlKHtcclxuICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgRHhvTWVkaWFSZXNpemluZ0NvbXBvbmVudFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgZXhwb3J0czogW1xyXG4gICAgICAgICAgICBEeG9NZWRpYVJlc2l6aW5nQ29tcG9uZW50XHJcbiAgICAgICAgXSxcclxuICAgIH0pXHJcbl0sIER4b01lZGlhUmVzaXppbmdNb2R1bGUpO1xyXG5leHBvcnQgeyBEeG9NZWRpYVJlc2l6aW5nTW9kdWxlIH07XHIiXX0=