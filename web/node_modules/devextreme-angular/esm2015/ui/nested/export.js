/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoExportComponent = class DxoExportComponent extends NestedOption {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get backgroundColor() {
        return this._getOption('backgroundColor');
    }
    set backgroundColor(value) {
        this._setOption('backgroundColor', value);
    }
    get enabled() {
        return this._getOption('enabled');
    }
    set enabled(value) {
        this._setOption('enabled', value);
    }
    get fileName() {
        return this._getOption('fileName');
    }
    set fileName(value) {
        this._setOption('fileName', value);
    }
    get formats() {
        return this._getOption('formats');
    }
    set formats(value) {
        this._setOption('formats', value);
    }
    get margin() {
        return this._getOption('margin');
    }
    set margin(value) {
        this._setOption('margin', value);
    }
    get printingEnabled() {
        return this._getOption('printingEnabled');
    }
    set printingEnabled(value) {
        this._setOption('printingEnabled', value);
    }
    get proxyUrl() {
        return this._getOption('proxyUrl');
    }
    set proxyUrl(value) {
        this._setOption('proxyUrl', value);
    }
    get svgToCanvas() {
        return this._getOption('svgToCanvas');
    }
    set svgToCanvas(value) {
        this._setOption('svgToCanvas', value);
    }
    get allowExportSelectedData() {
        return this._getOption('allowExportSelectedData');
    }
    set allowExportSelectedData(value) {
        this._setOption('allowExportSelectedData', value);
    }
    get customizeExcelCell() {
        return this._getOption('customizeExcelCell');
    }
    set customizeExcelCell(value) {
        this._setOption('customizeExcelCell', value);
    }
    get excelFilterEnabled() {
        return this._getOption('excelFilterEnabled');
    }
    set excelFilterEnabled(value) {
        this._setOption('excelFilterEnabled', value);
    }
    get excelWrapTextEnabled() {
        return this._getOption('excelWrapTextEnabled');
    }
    set excelWrapTextEnabled(value) {
        this._setOption('excelWrapTextEnabled', value);
    }
    get ignoreExcelErrors() {
        return this._getOption('ignoreExcelErrors');
    }
    set ignoreExcelErrors(value) {
        this._setOption('ignoreExcelErrors', value);
    }
    get texts() {
        return this._getOption('texts');
    }
    set texts(value) {
        this._setOption('texts', value);
    }
    get _optionPath() {
        return 'export';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoExportComponent.ɵfac = function DxoExportComponent_Factory(t) { return new (t || DxoExportComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoExportComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoExportComponent, selectors: [["dxo-export"]], inputs: { backgroundColor: "backgroundColor", enabled: "enabled", fileName: "fileName", formats: "formats", margin: "margin", printingEnabled: "printingEnabled", proxyUrl: "proxyUrl", svgToCanvas: "svgToCanvas", allowExportSelectedData: "allowExportSelectedData", customizeExcelCell: "customizeExcelCell", excelFilterEnabled: "excelFilterEnabled", excelWrapTextEnabled: "excelWrapTextEnabled", ignoreExcelErrors: "ignoreExcelErrors", texts: "texts" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoExportComponent_Template(rf, ctx) { }, styles: [""] });
DxoExportComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxoExportComponent.prototype, "backgroundColor", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "enabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxoExportComponent.prototype, "fileName", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], DxoExportComponent.prototype, "formats", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxoExportComponent.prototype, "margin", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "printingEnabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxoExportComponent.prototype, "proxyUrl", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Function])
], DxoExportComponent.prototype, "svgToCanvas", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "allowExportSelectedData", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Function])
], DxoExportComponent.prototype, "customizeExcelCell", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "excelFilterEnabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "excelWrapTextEnabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoExportComponent.prototype, "ignoreExcelErrors", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoExportComponent.prototype, "texts", null);
DxoExportComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoExportComponent);
export { DxoExportComponent };
let DxoExportModule = class DxoExportModule {
};
DxoExportModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoExportModule });
DxoExportModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoExportModule_Factory(t) { return new (t || DxoExportModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoExportComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-export',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { backgroundColor: [{
            type: Input
        }], enabled: [{
            type: Input
        }], fileName: [{
            type: Input
        }], formats: [{
            type: Input
        }], margin: [{
            type: Input
        }], printingEnabled: [{
            type: Input
        }], proxyUrl: [{
            type: Input
        }], svgToCanvas: [{
            type: Input
        }], allowExportSelectedData: [{
            type: Input
        }], customizeExcelCell: [{
            type: Input
        }], excelFilterEnabled: [{
            type: Input
        }], excelWrapTextEnabled: [{
            type: Input
        }], ignoreExcelErrors: [{
            type: Input
        }], texts: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoExportModule, { declarations: [DxoExportComponent], exports: [DxoExportComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoExportModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoExportComponent
                ],
                exports: [
                    DxoExportComponent
                ]
            }]
    }], null, null); })();
export { DxoExportModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,