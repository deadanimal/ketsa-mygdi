/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf, Output, EventEmitter, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoTabPanelOptions } from './base/tab-panel-options';
import { DxiItemComponent } from './item-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoTabPanelOptionsComponent = class DxoTabPanelOptionsComponent extends DxoTabPanelOptions {
    constructor(parentOptionHost, optionHost) {
        super();
        this._createEventEmitters([
            { emit: 'itemsChange' },
            { emit: 'selectedIndexChange' },
            { emit: 'selectedItemChange' }
        ]);
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'tabPanelOptions';
    }
    get itemsChildren() {
        return this._getOption('items');
    }
    set itemsChildren(value) {
        this.setChildren('items', value);
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoTabPanelOptionsComponent.ɵfac = function DxoTabPanelOptionsComponent_Factory(t) { return new (t || DxoTabPanelOptionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoTabPanelOptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoTabPanelOptionsComponent, selectors: [["dxo-tab-panel-options"]], contentQueries: function DxoTabPanelOptionsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
    } }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", animationEnabled: "animationEnabled", dataSource: "dataSource", deferRendering: "deferRendering", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", itemHoldTimeout: "itemHoldTimeout", items: "items", itemTemplate: "itemTemplate", itemTitleTemplate: "itemTitleTemplate", loop: "loop", noDataText: "noDataText", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onItemClick: "onItemClick", onItemContextMenu: "onItemContextMenu", onItemHold: "onItemHold", onItemRendered: "onItemRendered", onOptionChanged: "onOptionChanged", onSelectionChanged: "onSelectionChanged", onTitleClick: "onTitleClick", onTitleHold: "onTitleHold", onTitleRendered: "onTitleRendered", repaintChangesOnly: "repaintChangesOnly", rtlEnabled: "rtlEnabled", scrollByContent: "scrollByContent", scrollingEnabled: "scrollingEnabled", selectedIndex: "selectedIndex", selectedItem: "selectedItem", showNavButtons: "showNavButtons", swipeEnabled: "swipeEnabled", tabIndex: "tabIndex", visible: "visible", width: "width" }, outputs: { itemsChange: "itemsChange", selectedIndexChange: "selectedIndexChange", selectedItemChange: "selectedItemChange" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTabPanelOptionsComponent_Template(rf, ctx) { }, styles: [""] });
DxoTabPanelOptionsComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxoTabPanelOptionsComponent.prototype, "itemsChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxoTabPanelOptionsComponent.prototype, "selectedIndexChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxoTabPanelOptionsComponent.prototype, "selectedItemChange", void 0);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiItemComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoTabPanelOptionsComponent.prototype, "itemsChildren", null);
DxoTabPanelOptionsComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoTabPanelOptionsComponent);
export { DxoTabPanelOptionsComponent };
let DxoTabPanelOptionsModule = class DxoTabPanelOptionsModule {
};
DxoTabPanelOptionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoTabPanelOptionsModule });
DxoTabPanelOptionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoTabPanelOptionsModule_Factory(t) { return new (t || DxoTabPanelOptionsModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoTabPanelOptionsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-tab-panel-options',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'animationEnabled',
                    'dataSource',
                    'deferRendering',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'itemHoldTimeout',
                    'items',
                    'itemTemplate',
                    'itemTitleTemplate',
                    'loop',
                    'noDataText',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onItemClick',
                    'onItemContextMenu',
                    'onItemHold',
                    'onItemRendered',
                    'onOptionChanged',
                    'onSelectionChanged',
                    'onTitleClick',
                    'onTitleHold',
                    'onTitleRendered',
                    'repaintChangesOnly',
                    'rtlEnabled',
                    'scrollByContent',
                    'scrollingEnabled',
                    'selectedIndex',
                    'selectedItem',
                    'showNavButtons',
                    'swipeEnabled',
                    'tabIndex',
                    'visible',
                    'width'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { itemsChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiItemComponent)]
        }], itemsChange: [{
            type: Output
        }], selectedIndexChange: [{
            type: Output
        }], selectedItemChange: [{
            type: Output
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoTabPanelOptionsModule, { declarations: [DxoTabPanelOptionsComponent], exports: [DxoTabPanelOptionsComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoTabPanelOptionsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoTabPanelOptionsComponent
                ],
                exports: [
                    DxoTabPanelOptionsComponent
                ]
            }]
    }], null, null); })();
export { DxoTabPanelOptionsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lLWFuZ3VsYXIvZXNtMjAxNS91aS9uZXN0ZWQvdGFiLXBhbmVsLW9wdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21oREF1QkU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0RBc0JnRCxBQWlEL0M7Ozs7Ozs7OztFQU9EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBVTJCIiwiZmlsZSI6InRhYi1wYW5lbC1vcHRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBIb3N0LCBTa2lwU2VsZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENvbnRlbnRDaGlsZHJlbiwgZm9yd2FyZFJlZiwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9UYWJQYW5lbE9wdGlvbnMgfSBmcm9tICcuL2Jhc2UvdGFiLXBhbmVsLW9wdGlvbnMnO1xyXG5pbXBvcnQgeyBEeGlJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9pdGVtLWR4aSc7XHJcbmxldCBEeG9UYWJQYW5lbE9wdGlvbnNDb21wb25lbnQgPSBjbGFzcyBEeG9UYWJQYW5lbE9wdGlvbnNDb21wb25lbnQgZXh0ZW5kcyBEeG9UYWJQYW5lbE9wdGlvbnMge1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdCwgb3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5fY3JlYXRlRXZlbnRFbWl0dGVycyhbXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ2l0ZW1zQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzZWxlY3RlZEluZGV4Q2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzZWxlY3RlZEl0ZW1DaGFuZ2UnIH1cclxuICAgICAgICBdKTtcclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICBnZXQgX29wdGlvblBhdGgoKSB7XHJcbiAgICAgICAgcmV0dXJuICd0YWJQYW5lbE9wdGlvbnMnO1xyXG4gICAgfVxyXG4gICAgZ2V0IGl0ZW1zQ2hpbGRyZW4oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignaXRlbXMnKTtcclxuICAgIH1cclxuICAgIHNldCBpdGVtc0NoaWxkcmVuKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5zZXRDaGlsZHJlbignaXRlbXMnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2Z1bGxPcHRpb25QYXRoKCkuc2xpY2UoMCwgLTEpKTtcclxuICAgIH1cclxufTtcclxuRHhvVGFiUGFuZWxPcHRpb25zQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBTa2lwU2VsZiB9LCB7IHR5cGU6IEhvc3QgfV0gfSxcclxuICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogSG9zdCB9XSB9XHJcbl07XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhvVGFiUGFuZWxPcHRpb25zQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpdGVtc0NoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwic2VsZWN0ZWRJbmRleENoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwic2VsZWN0ZWRJdGVtQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBDb250ZW50Q2hpbGRyZW4oZm9yd2FyZFJlZigoKSA9PiBEeGlJdGVtQ29tcG9uZW50KSksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiaXRlbXNDaGlsZHJlblwiLCBudWxsKTtcclxuRHhvVGFiUGFuZWxPcHRpb25zQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIENvbXBvbmVudCh7XHJcbiAgICAgICAgc2VsZWN0b3I6ICdkeG8tdGFiLXBhbmVsLW9wdGlvbnMnLFxyXG4gICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XSxcclxuICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgJ2FjY2Vzc0tleScsXHJcbiAgICAgICAgICAgICdhY3RpdmVTdGF0ZUVuYWJsZWQnLFxyXG4gICAgICAgICAgICAnYW5pbWF0aW9uRW5hYmxlZCcsXHJcbiAgICAgICAgICAgICdkYXRhU291cmNlJyxcclxuICAgICAgICAgICAgJ2RlZmVyUmVuZGVyaW5nJyxcclxuICAgICAgICAgICAgJ2Rpc2FibGVkJyxcclxuICAgICAgICAgICAgJ2VsZW1lbnRBdHRyJyxcclxuICAgICAgICAgICAgJ2ZvY3VzU3RhdGVFbmFibGVkJyxcclxuICAgICAgICAgICAgJ2hlaWdodCcsXHJcbiAgICAgICAgICAgICdoaW50JyxcclxuICAgICAgICAgICAgJ2hvdmVyU3RhdGVFbmFibGVkJyxcclxuICAgICAgICAgICAgJ2l0ZW1Ib2xkVGltZW91dCcsXHJcbiAgICAgICAgICAgICdpdGVtcycsXHJcbiAgICAgICAgICAgICdpdGVtVGVtcGxhdGUnLFxyXG4gICAgICAgICAgICAnaXRlbVRpdGxlVGVtcGxhdGUnLFxyXG4gICAgICAgICAgICAnbG9vcCcsXHJcbiAgICAgICAgICAgICdub0RhdGFUZXh0JyxcclxuICAgICAgICAgICAgJ29uQ29udGVudFJlYWR5JyxcclxuICAgICAgICAgICAgJ29uRGlzcG9zaW5nJyxcclxuICAgICAgICAgICAgJ29uSW5pdGlhbGl6ZWQnLFxyXG4gICAgICAgICAgICAnb25JdGVtQ2xpY2snLFxyXG4gICAgICAgICAgICAnb25JdGVtQ29udGV4dE1lbnUnLFxyXG4gICAgICAgICAgICAnb25JdGVtSG9sZCcsXHJcbiAgICAgICAgICAgICdvbkl0ZW1SZW5kZXJlZCcsXHJcbiAgICAgICAgICAgICdvbk9wdGlvbkNoYW5nZWQnLFxyXG4gICAgICAgICAgICAnb25TZWxlY3Rpb25DaGFuZ2VkJyxcclxuICAgICAgICAgICAgJ29uVGl0bGVDbGljaycsXHJcbiAgICAgICAgICAgICdvblRpdGxlSG9sZCcsXHJcbiAgICAgICAgICAgICdvblRpdGxlUmVuZGVyZWQnLFxyXG4gICAgICAgICAgICAncmVwYWludENoYW5nZXNPbmx5JyxcclxuICAgICAgICAgICAgJ3J0bEVuYWJsZWQnLFxyXG4gICAgICAgICAgICAnc2Nyb2xsQnlDb250ZW50JyxcclxuICAgICAgICAgICAgJ3Njcm9sbGluZ0VuYWJsZWQnLFxyXG4gICAgICAgICAgICAnc2VsZWN0ZWRJbmRleCcsXHJcbiAgICAgICAgICAgICdzZWxlY3RlZEl0ZW0nLFxyXG4gICAgICAgICAgICAnc2hvd05hdkJ1dHRvbnMnLFxyXG4gICAgICAgICAgICAnc3dpcGVFbmFibGVkJyxcclxuICAgICAgICAgICAgJ3RhYkluZGV4JyxcclxuICAgICAgICAgICAgJ3Zpc2libGUnLFxyXG4gICAgICAgICAgICAnd2lkdGgnXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHlsZXM6IFsnJ11cclxuICAgIH0pLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDAsIFNraXBTZWxmKCkpLCB0c2xpYl8xLl9fcGFyYW0oMCwgSG9zdCgpKSxcclxuICAgIHRzbGliXzEuX19wYXJhbSgxLCBIb3N0KCkpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW05lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgTmVzdGVkT3B0aW9uSG9zdF0pXHJcbl0sIER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudCk7XHJcbmV4cG9ydCB7IER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudCB9O1xyXG5sZXQgRHhvVGFiUGFuZWxPcHRpb25zTW9kdWxlID0gY2xhc3MgRHhvVGFiUGFuZWxPcHRpb25zTW9kdWxlIHtcclxufTtcclxuRHhvVGFiUGFuZWxPcHRpb25zTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE5nTW9kdWxlKHtcclxuICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgRHhvVGFiUGFuZWxPcHRpb25zQ29tcG9uZW50XHJcbiAgICAgICAgXSxcclxuICAgICAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgICAgIER4b1RhYlBhbmVsT3B0aW9uc0NvbXBvbmVudFxyXG4gICAgICAgIF0sXHJcbiAgICB9KVxyXG5dLCBEeG9UYWJQYW5lbE9wdGlvbnNNb2R1bGUpO1xyXG5leHBvcnQgeyBEeG9UYWJQYW5lbE9wdGlvbnNNb2R1bGUgfTtcciJdfQ==