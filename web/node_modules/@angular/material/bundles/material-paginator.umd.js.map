{"version":3,"sources":["/Users/pipelinenetwork/ketsa-mygdi/web/node_modules/@angular/material/bundles/material-paginator.umd.js"],"names":[],"mappings":"AAAA;sTAC2E;oQACa;0MAClD;oEACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAsE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAgPhF,AAGC;;;;;;gDAC+K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA8P/K,AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAgBA;;;;;;;;;;;;;SAaD;;;;;;;;;;;;;;;;;;;;;;gDAaC","file":"material-paginator.umd.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/button'), require('@angular/material/select'), require('@angular/material/tooltip'), require('@angular/cdk/coercion'), require('rxjs'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/paginator', ['exports', '@angular/common', '@angular/core', '@angular/material/button', '@angular/material/select', '@angular/material/tooltip', '@angular/cdk/coercion', 'rxjs', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.paginator = {}), global.ng.common, global.ng.core, global.ng.material.button, global.ng.material.select, global.ng.material.tooltip, global.ng.cdk.coercion, global.rxjs, global.ng.material.core));\n}(this, (function (exports, common, i0, button, select, tooltip, coercion, rxjs, core) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n     * include it in a custom provider\n     */\n    var MatPaginatorIntl = /** @class */ (function () {\n        function MatPaginatorIntl() {\n            /**\n             * Stream to emit from when labels are changed. Use this to notify components when the labels have\n             * changed after initialization.\n             */\n            this.changes = new rxjs.Subject();\n            /** A label for the page size selector. */\n            this.itemsPerPageLabel = 'Items per page:';\n            /** A label for the button that increments the current page. */\n            this.nextPageLabel = 'Next page';\n            /** A label for the button that decrements the current page. */\n            this.previousPageLabel = 'Previous page';\n            /** A label for the button that moves to the first page. */\n            this.firstPageLabel = 'First page';\n            /** A label for the button that moves to the last page. */\n            this.lastPageLabel = 'Last page';\n            /** A label for the range of items within the current page and the length of the whole list. */\n            this.getRangeLabel = function (page, pageSize, length) {\n                if (length == 0 || pageSize == 0) {\n                    return \"0 of \" + length;\n                }\n                length = Math.max(length, 0);\n                var startIndex = page * pageSize;\n                // If the start index exceeds the list length, do not try and fix the end index to the end.\n                var endIndex = startIndex < length ?\n                    Math.min(startIndex + pageSize, length) :\n                    startIndex + pageSize;\n                return startIndex + 1 + \" \\u2013 \" + endIndex + \" of \" + length;\n            };\n        }\n        MatPaginatorIntl.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        MatPaginatorIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n        return MatPaginatorIntl;\n    }());\n    /** @docs-private */\n    function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n        return parentIntl || new MatPaginatorIntl();\n    }\n    /** @docs-private */\n    var MAT_PAGINATOR_INTL_PROVIDER = {\n        // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n        provide: MatPaginatorIntl,\n        deps: [[new i0.Optional(), new i0.SkipSelf(), MatPaginatorIntl]],\n        useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** The default page size if there is no page size and there are no provided page size options. */\n    var DEFAULT_PAGE_SIZE = 50;\n    /**\n     * Change event object that is emitted when the user selects a\n     * different page size or navigates to another page.\n     */\n    var PageEvent = /** @class */ (function () {\n        function PageEvent() {\n        }\n        return PageEvent;\n    }());\n    /** Injection token that can be used to provide the default options for the paginator module. */\n    var MAT_PAGINATOR_DEFAULT_OPTIONS = new i0.InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n    // Boilerplate for applying mixins to MatPaginator.\n    /** @docs-private */\n    var MatPaginatorBase = /** @class */ (function () {\n        function MatPaginatorBase() {\n        }\n        return MatPaginatorBase;\n    }());\n    var _MatPaginatorBase = core.mixinDisabled(core.mixinInitialized(MatPaginatorBase));\n    /**\n     * Component to provide navigation between paged information. Displays the size of the current\n     * page, user-selectable options to change that size, what items are being shown, and\n     * navigational button to go to the previous or next page.\n     */\n    var MatPaginator = /** @class */ (function (_super) {\n        __extends(MatPaginator, _super);\n        function MatPaginator(_intl, _changeDetectorRef, defaults) {\n            var _this = _super.call(this) || this;\n            _this._intl = _intl;\n            _this._changeDetectorRef = _changeDetectorRef;\n            _this._pageIndex = 0;\n            _this._length = 0;\n            _this._pageSizeOptions = [];\n            _this._hidePageSize = false;\n            _this._showFirstLastButtons = false;\n            /** Event emitted when the paginator changes the page size or page index. */\n            _this.page = new i0.EventEmitter();\n            _this._intlChanges = _intl.changes.subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n            if (defaults) {\n                var pageSize = defaults.pageSize, pageSizeOptions = defaults.pageSizeOptions, hidePageSize = defaults.hidePageSize, showFirstLastButtons = defaults.showFirstLastButtons;\n                if (pageSize != null) {\n                    _this._pageSize = pageSize;\n                }\n                if (pageSizeOptions != null) {\n                    _this._pageSizeOptions = pageSizeOptions;\n                }\n                if (hidePageSize != null) {\n                    _this._hidePageSize = hidePageSize;\n                }\n                if (showFirstLastButtons != null) {\n                    _this._showFirstLastButtons = showFirstLastButtons;\n                }\n            }\n            return _this;\n        }\n        Object.defineProperty(MatPaginator.prototype, \"pageIndex\", {\n            /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n            get: function () { return this._pageIndex; },\n            set: function (value) {\n                this._pageIndex = Math.max(coercion.coerceNumberProperty(value), 0);\n                this._changeDetectorRef.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatPaginator.prototype, \"length\", {\n            /** The length of the total number of items that are being paginated. Defaulted to 0. */\n            get: function () { return this._length; },\n            set: function (value) {\n                this._length = coercion.coerceNumberProperty(value);\n                this._changeDetectorRef.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatPaginator.prototype, \"pageSize\", {\n            /** Number of items to display on a page. By default set to 50. */\n            get: function () { return this._pageSize; },\n            set: function (value) {\n                this._pageSize = Math.max(coercion.coerceNumberProperty(value), 0);\n                this._updateDisplayedPageSizeOptions();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatPaginator.prototype, \"pageSizeOptions\", {\n            /** The set of provided page size options to display to the user. */\n            get: function () { return this._pageSizeOptions; },\n            set: function (value) {\n                this._pageSizeOptions = (value || []).map(function (p) { return coercion.coerceNumberProperty(p); });\n                this._updateDisplayedPageSizeOptions();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatPaginator.prototype, \"hidePageSize\", {\n            /** Whether to hide the page size selection UI from the user. */\n            get: function () { return this._hidePageSize; },\n            set: function (value) {\n                this._hidePageSize = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatPaginator.prototype, \"showFirstLastButtons\", {\n            /** Whether to show the first/last buttons UI to the user. */\n            get: function () { return this._showFirstLastButtons; },\n            set: function (value) {\n                this._showFirstLastButtons = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatPaginator.prototype.ngOnInit = function () {\n            this._initialized = true;\n            this._updateDisplayedPageSizeOptions();\n            this._markInitialized();\n        };\n        MatPaginator.prototype.ngOnDestroy = function () {\n            this._intlChanges.unsubscribe();\n        };\n        /** Advances to the next page if it exists. */\n        MatPaginator.prototype.nextPage = function () {\n            if (!this.hasNextPage()) {\n                return;\n            }\n            var previousPageIndex = this.pageIndex;\n            this.pageIndex++;\n            this._emitPageEvent(previousPageIndex);\n        };\n        /** Move back to the previous page if it exists. */\n        MatPaginator.prototype.previousPage = function () {\n            if (!this.hasPreviousPage()) {\n                return;\n            }\n            var previousPageIndex = this.pageIndex;\n            this.pageIndex--;\n            this._emitPageEvent(previousPageIndex);\n        };\n        /** Move to the first page if not already there. */\n        MatPaginator.prototype.firstPage = function () {\n            // hasPreviousPage being false implies at the start\n            if (!this.hasPreviousPage()) {\n                return;\n            }\n            var previousPageIndex = this.pageIndex;\n            this.pageIndex = 0;\n            this._emitPageEvent(previousPageIndex);\n        };\n        /** Move to the last page if not already there. */\n        MatPaginator.prototype.lastPage = function () {\n            // hasNextPage being false implies at the end\n            if (!this.hasNextPage()) {\n                return;\n            }\n            var previousPageIndex = this.pageIndex;\n            this.pageIndex = this.getNumberOfPages() - 1;\n            this._emitPageEvent(previousPageIndex);\n        };\n        /** Whether there is a previous page. */\n        MatPaginator.prototype.hasPreviousPage = function () {\n            return this.pageIndex >= 1 && this.pageSize != 0;\n        };\n        /** Whether there is a next page. */\n        MatPaginator.prototype.hasNextPage = function () {\n            var maxPageIndex = this.getNumberOfPages() - 1;\n            return this.pageIndex < maxPageIndex && this.pageSize != 0;\n        };\n        /** Calculate the number of pages */\n        MatPaginator.prototype.getNumberOfPages = function () {\n            if (!this.pageSize) {\n                return 0;\n            }\n            return Math.ceil(this.length / this.pageSize);\n        };\n        /**\n         * Changes the page size so that the first item displayed on the page will still be\n         * displayed using the new page size.\n         *\n         * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n         * switching so that the page size is 5 will set the third page as the current page so\n         * that the 10th item will still be displayed.\n         */\n        MatPaginator.prototype._changePageSize = function (pageSize) {\n            // Current page needs to be updated to reflect the new page size. Navigate to the page\n            // containing the previous page's first item.\n            var startIndex = this.pageIndex * this.pageSize;\n            var previousPageIndex = this.pageIndex;\n            this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n            this.pageSize = pageSize;\n            this._emitPageEvent(previousPageIndex);\n        };\n        /** Checks whether the buttons for going forwards should be disabled. */\n        MatPaginator.prototype._nextButtonsDisabled = function () {\n            return this.disabled || !this.hasNextPage();\n        };\n        /** Checks whether the buttons for going backwards should be disabled. */\n        MatPaginator.prototype._previousButtonsDisabled = function () {\n            return this.disabled || !this.hasPreviousPage();\n        };\n        /**\n         * Updates the list of page size options to display to the user. Includes making sure that\n         * the page size is an option and that the list is sorted.\n         */\n        MatPaginator.prototype._updateDisplayedPageSizeOptions = function () {\n            if (!this._initialized) {\n                return;\n            }\n            // If no page size is provided, use the first page size option or the default page size.\n            if (!this.pageSize) {\n                this._pageSize = this.pageSizeOptions.length != 0 ?\n                    this.pageSizeOptions[0] :\n                    DEFAULT_PAGE_SIZE;\n            }\n            this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n            if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n                this._displayedPageSizeOptions.push(this.pageSize);\n            }\n            // Sort the numbers using a number-specific sort function.\n            this._displayedPageSizeOptions.sort(function (a, b) { return a - b; });\n            this._changeDetectorRef.markForCheck();\n        };\n        /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n        MatPaginator.prototype._emitPageEvent = function (previousPageIndex) {\n            this.page.emit({\n                previousPageIndex: previousPageIndex,\n                pageIndex: this.pageIndex,\n                pageSize: this.pageSize,\n                length: this.length\n            });\n        };\n        MatPaginator.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-paginator',\n                        exportAs: 'matPaginator',\n                        template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                        inputs: ['disabled'],\n                        host: {\n                            'class': 'mat-paginator',\n                        },\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatPaginator.ctorParameters = function () { return [\n            { type: MatPaginatorIntl },\n            { type: i0.ChangeDetectorRef },\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n        ]; };\n        MatPaginator.propDecorators = {\n            color: [{ type: i0.Input }],\n            pageIndex: [{ type: i0.Input }],\n            length: [{ type: i0.Input }],\n            pageSize: [{ type: i0.Input }],\n            pageSizeOptions: [{ type: i0.Input }],\n            hidePageSize: [{ type: i0.Input }],\n            showFirstLastButtons: [{ type: i0.Input }],\n            page: [{ type: i0.Output }]\n        };\n        return MatPaginator;\n    }(_MatPaginatorBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatPaginatorModule = /** @class */ (function () {\n        function MatPaginatorModule() {\n        }\n        MatPaginatorModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            button.MatButtonModule,\n                            select.MatSelectModule,\n                            tooltip.MatTooltipModule,\n                        ],\n                        exports: [MatPaginator],\n                        declarations: [MatPaginator],\n                        providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                    },] }\n        ];\n        return MatPaginatorModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_PAGINATOR_DEFAULT_OPTIONS = MAT_PAGINATOR_DEFAULT_OPTIONS;\n    exports.MAT_PAGINATOR_INTL_PROVIDER = MAT_PAGINATOR_INTL_PROVIDER;\n    exports.MAT_PAGINATOR_INTL_PROVIDER_FACTORY = MAT_PAGINATOR_INTL_PROVIDER_FACTORY;\n    exports.MatPaginator = MatPaginator;\n    exports.MatPaginatorIntl = MatPaginatorIntl;\n    exports.MatPaginatorModule = MatPaginatorModule;\n    exports.PageEvent = PageEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}