{"version":3,"sources":["/Users/pipelinenetwork/ketsa-mygdi/web/node_modules/@angular/material/fesm5/icon/testing.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwDM;;;;;gDAGA;;;;;;KAMD;;;;;;;;gDAKC","file":"testing.js","sourcesContent":["import { Injectable, NgModule } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { of } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// tslint:enable:no-any\n/**\n * A null icon registry that must be imported to allow disabling of custom\n * icons.\n */\nvar FakeMatIconRegistry = /** @class */ (function () {\n    function FakeMatIconRegistry() {\n    }\n    FakeMatIconRegistry.prototype.addSvgIcon = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconLiteral = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconInNamespace = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconLiteralInNamespace = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconSet = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconSetLiteral = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconSetInNamespace = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.addSvgIconSetLiteralInNamespace = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.registerFontClassAlias = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.classNameForFontAlias = function (alias) {\n        return alias;\n    };\n    FakeMatIconRegistry.prototype.getDefaultFontSetClass = function () {\n        return 'material-icons';\n    };\n    FakeMatIconRegistry.prototype.getSvgIconFromUrl = function () {\n        return of(this._generateEmptySvg());\n    };\n    FakeMatIconRegistry.prototype.getNamedSvgIcon = function () {\n        return of(this._generateEmptySvg());\n    };\n    FakeMatIconRegistry.prototype.setDefaultFontSetClass = function () {\n        return this;\n    };\n    FakeMatIconRegistry.prototype.ngOnDestroy = function () { };\n    FakeMatIconRegistry.prototype._generateEmptySvg = function () {\n        var emptySvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        emptySvg.classList.add('fake-testing-svg');\n        // Emulate real icon characteristics from `MatIconRegistry` so size remains consistent in tests.\n        emptySvg.setAttribute('fit', '');\n        emptySvg.setAttribute('height', '100%');\n        emptySvg.setAttribute('width', '100%');\n        emptySvg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        emptySvg.setAttribute('focusable', 'false');\n        return emptySvg;\n    };\n    FakeMatIconRegistry.decorators = [\n        { type: Injectable }\n    ];\n    return FakeMatIconRegistry;\n}());\n/** Import this module in tests to install the null icon registry. */\nvar MatIconTestingModule = /** @class */ (function () {\n    function MatIconTestingModule() {\n    }\n    MatIconTestingModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [{ provide: MatIconRegistry, useClass: FakeMatIconRegistry }]\n                },] }\n    ];\n    return MatIconTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FakeMatIconRegistry, MatIconTestingModule };\n"]}