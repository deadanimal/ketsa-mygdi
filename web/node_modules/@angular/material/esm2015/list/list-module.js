/**
 * @fileoverview added by tsickle
 * Generated from: src/material/list/list-module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule, } from '@angular/material/core';
import { MatList, MatNavList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListSubheaderCssMatStyler, } from './list';
import { MatListOption, MatSelectionList } from './selection-list';
import { MatDividerModule } from '@angular/material/divider';
import * as ɵngcc0 from '@angular/core';
export class MatListModule {
}
MatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });
MatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],
        MatLineModule,
        MatCommonModule,
        MatPseudoCheckboxModule,
        MatDividerModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,
        MatNavList,
        MatListItem,
        MatListAvatarCssMatStyler,
        MatListIconCssMatStyler,
        MatListSubheaderCssMatStyler,
        MatSelectionList,
        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,
        MatNavList,
        MatListItem,
        MatListAvatarCssMatStyler,
        MatLineModule,
        MatCommonModule,
        MatListIconCssMatStyler,
        MatListSubheaderCssMatStyler,
        MatPseudoCheckboxModule,
        MatSelectionList,
        MatListOption,
        MatDividerModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{
        type: NgModule,
        args: [{
                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],
                exports: [
                    MatList,
                    MatNavList,
                    MatListItem,
                    MatListAvatarCssMatStyler,
                    MatLineModule,
                    MatCommonModule,
                    MatListIconCssMatStyler,
                    MatListSubheaderCssMatStyler,
                    MatPseudoCheckboxModule,
                    MatSelectionList,
                    MatListOption,
                    MatDividerModule
                ],
                declarations: [
                    MatList,
                    MatNavList,
                    MatListItem,
                    MatListAvatarCssMatStyler,
                    MatListIconCssMatStyler,
                    MatListSubheaderCssMatStyler,
                    MatSelectionList,
                    MatListOption
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9AYW5ndWxhci9tYXRlcmlhbC9lc20yMDE1L2xpc3QvbGlzdC1tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7Ozs7Ozs7Q0FDQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkE2QkMiLCJmaWxlIjoibGlzdC1tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogR2VuZXJhdGVkIGZyb206IHNyYy9tYXRlcmlhbC9saXN0L2xpc3QtbW9kdWxlLnRzXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRDb21tb25Nb2R1bGUsIE1hdExpbmVNb2R1bGUsIE1hdFBzZXVkb0NoZWNrYm94TW9kdWxlLCBNYXRSaXBwbGVNb2R1bGUsIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5pbXBvcnQgeyBNYXRMaXN0LCBNYXROYXZMaXN0LCBNYXRMaXN0QXZhdGFyQ3NzTWF0U3R5bGVyLCBNYXRMaXN0SWNvbkNzc01hdFN0eWxlciwgTWF0TGlzdEl0ZW0sIE1hdExpc3RTdWJoZWFkZXJDc3NNYXRTdHlsZXIsIH0gZnJvbSAnLi9saXN0JztcbmltcG9ydCB7IE1hdExpc3RPcHRpb24sIE1hdFNlbGVjdGlvbkxpc3QgfSBmcm9tICcuL3NlbGVjdGlvbi1saXN0JztcbmltcG9ydCB7IE1hdERpdmlkZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaXZpZGVyJztcbmV4cG9ydCBjbGFzcyBNYXRMaXN0TW9kdWxlIHtcbn1cbk1hdExpc3RNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGltcG9ydHM6IFtNYXRMaW5lTW9kdWxlLCBNYXRSaXBwbGVNb2R1bGUsIE1hdENvbW1vbk1vZHVsZSwgTWF0UHNldWRvQ2hlY2tib3hNb2R1bGUsIENvbW1vbk1vZHVsZV0sXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgICAgICBNYXRMaXN0LFxuICAgICAgICAgICAgICAgICAgICBNYXROYXZMaXN0LFxuICAgICAgICAgICAgICAgICAgICBNYXRMaXN0SXRlbSxcbiAgICAgICAgICAgICAgICAgICAgTWF0TGlzdEF2YXRhckNzc01hdFN0eWxlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0TGluZU1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q29tbW9uTW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICBNYXRMaXN0SWNvbkNzc01hdFN0eWxlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0TGlzdFN1YmhlYWRlckNzc01hdFN0eWxlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0UHNldWRvQ2hlY2tib3hNb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIE1hdFNlbGVjdGlvbkxpc3QsXG4gICAgICAgICAgICAgICAgICAgIE1hdExpc3RPcHRpb24sXG4gICAgICAgICAgICAgICAgICAgIE1hdERpdmlkZXJNb2R1bGVcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgICAgICBNYXRMaXN0LFxuICAgICAgICAgICAgICAgICAgICBNYXROYXZMaXN0LFxuICAgICAgICAgICAgICAgICAgICBNYXRMaXN0SXRlbSxcbiAgICAgICAgICAgICAgICAgICAgTWF0TGlzdEF2YXRhckNzc01hdFN0eWxlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0TGlzdEljb25Dc3NNYXRTdHlsZXIsXG4gICAgICAgICAgICAgICAgICAgIE1hdExpc3RTdWJoZWFkZXJDc3NNYXRTdHlsZXIsXG4gICAgICAgICAgICAgICAgICAgIE1hdFNlbGVjdGlvbkxpc3QsXG4gICAgICAgICAgICAgICAgICAgIE1hdExpc3RPcHRpb25cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxdIH1cbl07XG4iXX0=