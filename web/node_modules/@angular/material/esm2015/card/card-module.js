/**
 * @fileoverview added by tsickle
 * Generated from: src/material/card/card-module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { MatCommonModule } from '@angular/material/core';
import { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage, } from './card';
import * as ɵngcc0 from '@angular/core';
export class MatCardModule {
}
MatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });
MatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],
        MatCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
        MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,
        MatCardHeader,
        MatCardTitleGroup,
        MatCardContent,
        MatCardTitle,
        MatCardSubtitle,
        MatCardActions,
        MatCardFooter,
        MatCardSmImage,
        MatCardMdImage,
        MatCardLgImage,
        MatCardImage,
        MatCardXlImage,
        MatCardAvatar,
        MatCommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{
        type: NgModule,
        args: [{
                imports: [MatCommonModule],
                exports: [
                    MatCard,
                    MatCardHeader,
                    MatCardTitleGroup,
                    MatCardContent,
                    MatCardTitle,
                    MatCardSubtitle,
                    MatCardActions,
                    MatCardFooter,
                    MatCardSmImage,
                    MatCardMdImage,
                    MatCardLgImage,
                    MatCardImage,
                    MatCardXlImage,
                    MatCardAvatar,
                    MatCommonModule,
                ],
                declarations: [
                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
                    MatCardXlImage, MatCardAvatar,
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9AYW5ndWxhci9tYXRlcmlhbC9lc20yMDE1L2NhcmQvY2FyZC1tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQTs7OztDQUNDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBMkJDIiwiZmlsZSI6ImNhcmQtbW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEdlbmVyYXRlZCBmcm9tOiBzcmMvbWF0ZXJpYWwvY2FyZC9jYXJkLW1vZHVsZS50c1xuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jb3JlJztcbmltcG9ydCB7IE1hdENhcmQsIE1hdENhcmRBY3Rpb25zLCBNYXRDYXJkQXZhdGFyLCBNYXRDYXJkQ29udGVudCwgTWF0Q2FyZEZvb3RlciwgTWF0Q2FyZEhlYWRlciwgTWF0Q2FyZEltYWdlLCBNYXRDYXJkTGdJbWFnZSwgTWF0Q2FyZE1kSW1hZ2UsIE1hdENhcmRTbUltYWdlLCBNYXRDYXJkU3VidGl0bGUsIE1hdENhcmRUaXRsZSwgTWF0Q2FyZFRpdGxlR3JvdXAsIE1hdENhcmRYbEltYWdlLCB9IGZyb20gJy4vY2FyZCc7XG5leHBvcnQgY2xhc3MgTWF0Q2FyZE1vZHVsZSB7XG59XG5NYXRDYXJkTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBOZ01vZHVsZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICBpbXBvcnRzOiBbTWF0Q29tbW9uTW9kdWxlXSxcbiAgICAgICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmQsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRIZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRUaXRsZUdyb3VwLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkQ29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkU3VidGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRBY3Rpb25zLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkRm9vdGVyLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkU21JbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZE1kSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRMZ0ltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRYbEltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkQXZhdGFyLFxuICAgICAgICAgICAgICAgICAgICBNYXRDb21tb25Nb2R1bGUsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZCwgTWF0Q2FyZEhlYWRlciwgTWF0Q2FyZFRpdGxlR3JvdXAsIE1hdENhcmRDb250ZW50LCBNYXRDYXJkVGl0bGUsIE1hdENhcmRTdWJ0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEFjdGlvbnMsIE1hdENhcmRGb290ZXIsIE1hdENhcmRTbUltYWdlLCBNYXRDYXJkTWRJbWFnZSwgTWF0Q2FyZExnSW1hZ2UsIE1hdENhcmRJbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFhsSW1hZ2UsIE1hdENhcmRBdmF0YXIsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIH0sXSB9XG5dO1xuIl19