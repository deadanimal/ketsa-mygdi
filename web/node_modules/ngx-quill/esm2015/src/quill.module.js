import * as ɵngcc0 from '@angular/core';
var QuillModule_1;
import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defaultModules } from './quill-defaults';
import { QuillEditorComponent } from './quill-editor.component';
import { QUILL_CONFIG_TOKEN } from './quill-editor.interfaces';
import { QuillViewHTMLComponent } from './quill-view-html.component';
import { QuillViewComponent } from './quill-view.component';
let QuillModule = QuillModule_1 = class QuillModule {
    static forRoot(config) {
        return {
            ngModule: QuillModule_1,
            providers: [
                {
                    provide: QUILL_CONFIG_TOKEN,
                    useValue: config || { modules: defaultModules }
                }
            ]
        };
    }
};
QuillModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });
QuillModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuillModule_Factory(t) { return new (t || QuillModule)(); }, providers: [], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent,
        QuillViewComponent,
        QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    QuillEditorComponent,
                    QuillViewComponent,
                    QuillViewHTMLComponent
                ],
                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],
                imports: [CommonModule],
                providers: []
            }]
    }], null, null); })();
export { QuillModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9uZ3gtcXVpbGwvZXNtMjAxNS9zcmMvcXVpbGwubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFxQkU7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBWWMiLCJmaWxlIjoicXVpbGwubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFF1aWxsTW9kdWxlXzE7XG5pbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGRlZmF1bHRNb2R1bGVzIH0gZnJvbSAnLi9xdWlsbC1kZWZhdWx0cyc7XG5pbXBvcnQgeyBRdWlsbEVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vcXVpbGwtZWRpdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBRVUlMTF9DT05GSUdfVE9LRU4gfSBmcm9tICcuL3F1aWxsLWVkaXRvci5pbnRlcmZhY2VzJztcbmltcG9ydCB7IFF1aWxsVmlld0hUTUxDb21wb25lbnQgfSBmcm9tICcuL3F1aWxsLXZpZXctaHRtbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUXVpbGxWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9xdWlsbC12aWV3LmNvbXBvbmVudCc7XG5sZXQgUXVpbGxNb2R1bGUgPSBRdWlsbE1vZHVsZV8xID0gY2xhc3MgUXVpbGxNb2R1bGUge1xuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFF1aWxsTW9kdWxlXzEsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFFVSUxMX0NPTkZJR19UT0tFTixcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyB8fCB7IG1vZHVsZXM6IGRlZmF1bHRNb2R1bGVzIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgfVxufTtcblF1aWxsTW9kdWxlID0gUXVpbGxNb2R1bGVfMSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICBRdWlsbEVkaXRvckNvbXBvbmVudCxcbiAgICAgICAgICAgIFF1aWxsVmlld0NvbXBvbmVudCxcbiAgICAgICAgICAgIFF1aWxsVmlld0hUTUxDb21wb25lbnRcbiAgICAgICAgXSxcbiAgICAgICAgZXhwb3J0czogW1F1aWxsRWRpdG9yQ29tcG9uZW50LCBRdWlsbFZpZXdDb21wb25lbnQsIFF1aWxsVmlld0hUTUxDb21wb25lbnRdLFxuICAgICAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICAgICAgcHJvdmlkZXJzOiBbXVxuICAgIH0pXG5dLCBRdWlsbE1vZHVsZSk7XG5leHBvcnQgeyBRdWlsbE1vZHVsZSB9O1xuIl19