import { __decorate } from "tslib";
import { Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';
import { ClipboardService } from './ngx-clipboard.service';
import * as ɵngcc0 from '@angular/core';
var ClipboardIfSupportedDirective = /** @class */ (function () {
    function ClipboardIfSupportedDirective(_clipboardService, _viewContainerRef, _templateRef) {
        this._clipboardService = _clipboardService;
        this._viewContainerRef = _viewContainerRef;
        this._templateRef = _templateRef;
    }
    ClipboardIfSupportedDirective.prototype.ngOnInit = function () {
        if (this._clipboardService.isSupported) {
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
    };
    ClipboardIfSupportedDirective.ctorParameters = function () { return [
        { type: ClipboardService },
        { type: ViewContainerRef },
        { type: TemplateRef }
    ]; };
ClipboardIfSupportedDirective.ɵfac = function ClipboardIfSupportedDirective_Factory(t) { return new (t || ClipboardIfSupportedDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
ClipboardIfSupportedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClipboardIfSupportedDirective, selectors: [["", "ngxClipboardIfSupported", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardIfSupportedDirective, [{
        type: Directive,
        args: [{
                selector: '[ngxClipboardIfSupported]'
            }]
    }], function () { return [{ type: ClipboardService }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, null); })();
    return ClipboardIfSupportedDirective;
}());
export { ClipboardIfSupportedDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZW5ldHdvcmsva2V0c2EtbXlnZGkvd2ViL25vZGVfbW9kdWxlcy9uZ3gtY2xpcGJvYXJkL2VzbTUvbGliL25neC1jbGlwYm9hcmQtaWYtc3VwcG9ydGVkLmRpcmVjdGl2ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7U0FlUzs7Ozs7Ozs7MklBSzZCIiwiZmlsZSI6Im5neC1jbGlwYm9hcmQtaWYtc3VwcG9ydGVkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENsaXBib2FyZFNlcnZpY2UgfSBmcm9tICcuL25neC1jbGlwYm9hcmQuc2VydmljZSc7XHJcbnZhciBDbGlwYm9hcmRJZlN1cHBvcnRlZERpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlKF9jbGlwYm9hcmRTZXJ2aWNlLCBfdmlld0NvbnRhaW5lclJlZiwgX3RlbXBsYXRlUmVmKSB7XHJcbiAgICAgICAgdGhpcy5fY2xpcGJvYXJkU2VydmljZSA9IF9jbGlwYm9hcmRTZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuX3ZpZXdDb250YWluZXJSZWYgPSBfdmlld0NvbnRhaW5lclJlZjtcclxuICAgICAgICB0aGlzLl90ZW1wbGF0ZVJlZiA9IF90ZW1wbGF0ZVJlZjtcclxuICAgIH1cclxuICAgIENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlLnByb3RvdHlwZS5uZ09uSW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5fY2xpcGJvYXJkU2VydmljZS5pc1N1cHBvcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl92aWV3Q29udGFpbmVyUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLl90ZW1wbGF0ZVJlZik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xyXG4gICAgICAgIHsgdHlwZTogQ2xpcGJvYXJkU2VydmljZSB9LFxyXG4gICAgICAgIHsgdHlwZTogVmlld0NvbnRhaW5lclJlZiB9LFxyXG4gICAgICAgIHsgdHlwZTogVGVtcGxhdGVSZWYgfVxyXG4gICAgXTsgfTtcclxuICAgIENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgRGlyZWN0aXZlKHtcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdbbmd4Q2xpcGJvYXJkSWZTdXBwb3J0ZWRdJ1xyXG4gICAgICAgIH0pXHJcbiAgICBdLCBDbGlwYm9hcmRJZlN1cHBvcnRlZERpcmVjdGl2ZSk7XHJcbiAgICByZXR1cm4gQ2xpcGJvYXJkSWZTdXBwb3J0ZWREaXJlY3RpdmU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlIH07XHIiXX0=